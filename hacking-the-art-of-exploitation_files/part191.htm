<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>0x781 Offline Brute-Force Attacks</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part190.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part192.htm">Next &gt;</a></p><p class="s32" style="padding-left: 91pt;text-indent: 0pt;text-align: left;"><a name="bookmark176">0x781 Offline Brute-Force Attacks</a></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;">Brute forcing will always be a possible attack on any computationally secure cryptosystem. The only question that remains is whether it’s a practical attack or not. With WEP, the actual method of offline brute forcing is simple: Capture a few packets, then try to decrypt the packets using every possible key. Next, recalculate the checksum for the packet, and compare this with the original checksum. If they match, then that’s most likely the key. Usually, this needs to be done with at least two packets, since it’s likely that a single packet can be decrypted with an invalid key yet the checksum will still be valid.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">However, under the assumption of 10,000 cracks per second, brute forcing through the 40-bit keyspace would take over three years. Realistically, modern processors can achieve more than 10,000 cracks per second, but even at 200,000 cracks per second, this would take a few months. Depending on the resources and dedication of an attacker, this type of attack may or may not be feasible.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">Tim Newsham has provided an effective cracking method that attacks weaknesses in the password-based key-generation algorithm that is used by most 40-bit (marketed as 64-bit) cards and access points. His method</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 11pt;text-align: left;">effectively reduces the 40-bit keyspace down to 21 bits, which can be cracked</p><p style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;"><a href="http://www.lava.net/%7Enewsham/wlan" class="a" target="_blank">in a matter of minutes under the assumption of 10,000 cracks per second (and in a matter of seconds on a modern processor). More information on his methods can be found at </a><a href="http://www.lava.net/%7Enewsham/wlan" target="_blank">http://www.lava.net/~newsham/wlan.</a></p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">For 104-bit (marketed as 128-bit) WEP networks, brute-forcing just isn’t feasible.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part190.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part192.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
