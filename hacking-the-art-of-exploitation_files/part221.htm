<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>S</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part220.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part222.htm">Next &gt;</a></p><p class="s5" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">S</p><p class="s48" style="padding-top: 4pt;padding-left: 30pt;text-indent: 0pt;text-align: left;">%s <span class="s131">format parameter, 48, 172</span></p><p class="s131" style="padding-top: 1pt;padding-left: 30pt;text-indent: 0pt;text-align: left;">Sadmind worm, 117</p><p class="s131" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">salt value, 153–154</p><p class="s131" style="padding-left: 30pt;text-indent: 10pt;line-height: 109%;text-align: left;">for password encryption, 419 Sasser worm, 319</p><p class="s131" style="padding-left: 62pt;text-indent: -32pt;line-height: 109%;text-align: left;">saved frame pointer (SFP), 70, 72–73, 130</p><p class="s131" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">S-box array, 435</p><p class="s48" style="padding-left: 30pt;text-indent: 0pt;line-height: 109%;text-align: left;">scanf() <span class="s131">function, 50 scope of variables, 62–69 scope.c program, 62</span></p><p class="s131" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">scope2.c program, 63–64</p><p class="s131" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">scope3.c program, 64–65</p><p class="s131" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">script kiddies, 3</p><p class="s131" style="padding-left: 62pt;text-indent: -32pt;line-height: 109%;text-align: left;">Secure Digital Music Initiative (SDMI), 3</p><p class="s131" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">Secure Shell (SSH)</p><p class="s131" style="padding-left: 62pt;text-indent: -21pt;line-height: 109%;text-align: left;">differing host fingerprints, 410–413</p><p class="s131" style="padding-left: 62pt;text-indent: -21pt;line-height: 109%;text-align: left;">protections against identity spoofing, 409–410</p><p class="s131" style="padding-left: 40pt;text-indent: -10pt;line-height: 109%;text-align: left;">Secure Sockets Layer (SSL), 393 protections against identity</p><p class="s131" style="padding-left: 62pt;text-indent: 0pt;text-align: left;">spoofing, 409–410</p><p class="s131" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">security</p><p class="s131" style="padding-left: 40pt;text-indent: 0pt;text-align: left;">changing vulnerabilities, 388</p><p class="s131" style="padding-left: 40pt;text-indent: 0pt;line-height: 109%;text-align: left;">computational, 396 impact of mistakes, 118 unconditional, 394</p><p class="s131" style="padding-left: 62pt;text-indent: -32pt;line-height: 109%;text-align: left;">seed number, for random sequence of numbers, 101</p><p class="s131" style="padding-left: 30pt;text-indent: 0pt;line-height: 109%;text-align: left;">segmentation fault, 60, 61 semicolon (<span class="s48">;</span>), for instruction end, 8 <span class="s48">send() </span>function, 199, 206</p><p class="s48" style="padding-left: 30pt;text-indent: 0pt;line-height: 11pt;text-align: left;">send_string() <span class="s131">function, 209</span></p><p class="s48" style="padding-left: 30pt;text-indent: 0pt;text-align: left;">seq <span class="s131">command, 141</span></p><p class="s131" style="padding-left: 30pt;text-indent: 0pt;line-height: 109%;text-align: left;">sequence numbers, for TCP, 222, 224 server example, displaying packet</p><p class="s131" style="padding-left: 62pt;text-indent: 0pt;text-align: left;">data, 204</p><p class="s131" style="padding-top: 3pt;padding-left: 102pt;text-indent: -10pt;line-height: 109%;text-align: left;">session layer (OSI), 196 for web browser, 217</p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;line-height: 109%;text-align: justify;">set disassembly intel <span class="s131">command, 25 </span>set user ID (setuid) <span class="s131">permission, 89 </span>seteuid() <span class="s131">function, 299</span></p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">setresuid() <span class="s131">system call, 300–301</span></p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">setsockopt() <span class="s131">function, 205</span></p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;line-height: 109%;text-align: left;">SFP (saved frame pointer), 70 Shannon, Claude, 394</p><p class="s131" style="padding-left: 123pt;text-indent: -32pt;line-height: 109%;text-align: left;">shell command, executing like function, 134</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;line-height: 10pt;text-align: left;">shellcode, 137, 281</p><p class="s131" style="padding-top: 1pt;padding-left: 102pt;text-indent: 0pt;line-height: 109%;text-align: left;">argument as placement option, 365 assembly language for, 282–286 connect-back, 314–318</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">creating, 286–295</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">jump to, 386</p><p class="s48" style="padding-left: 102pt;text-indent: 0pt;line-height: 109%;text-align: left;">memcpy() <span class="s131">function to copy, 139 memory location for, 142 overwriting .dtors section with</span></p><p class="s131" style="padding-left: 102pt;text-indent: 21pt;line-height: 109%;text-align: left;">address of injected, 190 placing in environment</p><p class="s131" style="padding-left: 102pt;text-indent: 21pt;line-height: 107%;text-align: left;">variable, 188 polymorphic printable ASCII,</p><p class="s131" style="padding-left: 123pt;text-indent: 0pt;text-align: left;">366–376</p><p class="s131" style="padding-top: 1pt;padding-left: 102pt;text-indent: 0pt;line-height: 109%;text-align: left;">port-binding, 278–280, 303–314 proof of functioning, 336 reducing size, 298</p><p class="s131" style="padding-left: 123pt;text-indent: -21pt;line-height: 109%;text-align: left;">restoring tinyweb daemon execution, 345</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">shell-spawning, 295–303</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">and webserver, 332</p><p class="s131" style="padding-top: 1pt;padding-left: 102pt;text-indent: 0pt;text-align: left;">zeroing registers, 294</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">shellcode.s program, 302–303</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">Shor, Peter, 404–405</p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">short <span class="s131">keyword, 42</span></p><p class="s131" style="padding-left: 123pt;text-indent: -32pt;line-height: 109%;text-align: left;">short writes, for format string exploits, 182–183</p><p class="s131" style="padding-left: 123pt;text-indent: -32pt;line-height: 109%;text-align: left;">shorthand expressions, for arith- metic operators, 13–14</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">shroud.c program, 268–272</p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: justify;">sigint_handler() <span class="s131">function, 323</span></p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">SIGKILL <span class="s131">signal, 324</span></p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">signal() <span class="s131">function, 322</span></p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">signal_example.c program, 322–323</p><p class="s48" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;line-height: 109%;text-align: left;">signal_handler() <span class="s131">function, 323 signals, for interprocess communica-</span></p><p class="s131" style="padding-left: 91pt;text-indent: 32pt;line-height: 107%;text-align: left;">tion in Unix, 322–324 signed numerical values, 41</p><p class="s131" style="padding-top: 3pt;padding-left: 48pt;text-indent: -32pt;line-height: 109%;text-align: left;">Simple Mail Transfer Protocol (SMTP), 222</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">simplenote.c program, 82–84</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">simple_server.c file, 204–207</p><p class="s48" style="padding-left: 16pt;text-indent: 0pt;line-height: 109%;text-align: left;">sizeof() <span class="s131">function, 58 </span>sizeof() <span class="s131">macro (C), 42 Sklyarov, Dmitry, 3–4</span></p><p class="s131" style="padding-left: 48pt;text-indent: -32pt;line-height: 109%;text-align: justify;">SMTP (Simple Mail Transfer Protocol), 222</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;line-height: 109%;text-align: justify;">smurf attacks, 257 sniffing packets</p><p class="s131" style="padding-left: 27pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">active, 239–251</p><p class="s131" style="padding-top: 1pt;padding-left: 27pt;text-indent: 0pt;text-align: justify;">in promiscuous mode, 225</p><p class="s48" style="padding-left: 16pt;text-indent: 0pt;text-align: justify;">sockaddr <span class="s131">structure, 200–202, 305, 306</span></p><p class="s131" style="padding-top: 1pt;padding-left: 27pt;text-indent: 0pt;text-align: justify;">pointer to, 201</p><p class="s48" style="padding-left: 16pt;text-indent: 0pt;text-align: justify;">sockaddr_in <span class="s131">structure, 348</span></p><p class="s48" style="padding-left: 16pt;text-indent: 0pt;line-height: 109%;text-align: justify;">socket() <span class="s131">function, 199, 200, 205, 314 </span>socketcall() <span class="s131">system call (Linux), 304 socket_reuse_restore.s file, 357</span></p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;text-align: justify;">sockets, 198–217, 307</p><p class="s131" style="padding-left: 27pt;text-indent: 0pt;text-align: justify;">address conversion, 203</p><p class="s131" style="padding-left: 27pt;text-indent: 0pt;text-align: justify;">addresses, 200–202</p><p class="s131" style="padding-top: 1pt;padding-left: 48pt;text-indent: -21pt;line-height: 107%;text-align: left;">file descriptor for accepted connection, 206</p><p class="s131" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">functions, 199–200</p><p class="s131" style="padding-top: 1pt;padding-left: 27pt;text-indent: 0pt;text-align: left;">reuse, 355–359</p><p class="s131" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">server example, 203–207</p><p class="s131" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">tinyweb server, 213–217</p><p class="s131" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">web client, 207–213</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">software piracy, 118</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">Solar Designer, 422, 454</p><p class="s131" style="padding-top: 1pt;padding-left: 16pt;text-indent: 0pt;text-align: left;">Song, Dug, 226, 249, 454</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;line-height: 109%;text-align: left;">source address, manipulating, 239 Source Index (ESI) register, 24 Sparc processor, 20</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;line-height: 10pt;text-align: left;">spoofing, 239–240</p><p class="s131" style="padding-left: 27pt;text-indent: 0pt;line-height: 109%;text-align: left;">logged IP address, 348–352 packet contents, 263</p><p class="s48" style="padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;">sprintf() <span class="s131">function, 262</span></p><p class="s48" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">srand() <span class="s131">function, 101</span></p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;text-align: justify;">SSH. <span class="s132">See </span>Secure Shell (SSH)</p><p class="s131" style="padding-left: 27pt;text-indent: -10pt;line-height: 109%;text-align: left;">SSL (Secure Sockets Layer), 393 protections against identity</p><p class="s131" style="padding-left: 48pt;text-indent: 0pt;text-align: left;">spoofing, 409–410</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">stack, 40, 70, 128</p><p class="s131" style="padding-left: 27pt;text-indent: 0pt;line-height: 109%;text-align: left;">arguments to function call in, 339 assembly instructions using,</p><p class="s131" style="padding-left: 48pt;text-indent: 0pt;text-align: left;">287–289</p><p class="s131" style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">stack, <span class="s132">continued</span></p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">frame, 70, 74, 128</p><p class="s131" style="padding-left: 113pt;text-indent: 0pt;line-height: 109%;text-align: left;">displaying local variables in, 66 instructions to set up and</p><p class="s131" style="padding-left: 123pt;text-indent: 0pt;text-align: left;">remove structures, 341</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">growth of, 75</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">memory in, 77</p><p class="s131" style="padding-top: 1pt;padding-left: 102pt;text-indent: 0pt;text-align: left;">nonexecutable, 376–379</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;line-height: 109%;text-align: justify;">randomized space, 379–391 role with format strings, 169 segment, 70</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;line-height: 10pt;text-align: left;">variables</p><p class="s131" style="padding-left: 113pt;text-indent: 0pt;text-align: left;">declaring, 76</p><p class="s131" style="padding-left: 91pt;text-indent: 21pt;line-height: 109%;text-align: left;">and shellcode reliability, 356 Stack Pointer (ESP) register, 24, 33,</p><p class="s131" style="padding-left: 123pt;text-indent: 0pt;text-align: left;">70, 73</p><p class="s131" style="padding-top: 1pt;padding-left: 102pt;text-indent: 0pt;text-align: left;">shellcode and, 367</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">stack_example.c program, 71–75</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">Stallman, Richard, 3</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">standard error, 307</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;line-height: 109%;text-align: left;">standard input, 307, 358 standard input/output (I/O)</p><p class="s131" style="padding-left: 123pt;text-indent: 0pt;text-align: left;">library, 19</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">standard output, 307</p><p class="s131" style="padding-left: 123pt;text-indent: -32pt;line-height: 109%;text-align: left;">static function memory, string pointer referencing, 228</p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;line-height: 11pt;text-align: left;">static <span class="s131">keyword, 75</span></p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">static variables, 66–69</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;line-height: 109%;text-align: left;">memory addresses, 69 memory segment for, 69</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">static.c program, 67</p><p class="s131" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">static2.c program, 68</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">status flags, <span class="s48">cmp </span>operation to set, 311</p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;">stderr <span class="s131">argument, 79 </span>stdio <span class="s131">header file, 19 stealth, by hackers, 320 stealth SYN scan, 264</span></p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;line-height: 109%;text-align: left;">stepi <span class="s131">command (GDB), 384 storage space, vs. computational</span></p><p class="s131" style="padding-left: 123pt;text-indent: 0pt;text-align: left;">power, 424</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">strace program, 336–338, 352–353</p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">strcat() <span class="s131">function, 121</span></p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">strcpy() <span class="s131">function, 39–41, 365</span></p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">stream ciphers, 398</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">stream sockets, 198, 222</p><p class="s131" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">string.h, 39</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">strings, 38–41</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;line-height: 107%;text-align: left;">concatenation in Perl, 134 encoding, 359–362</p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">strlen() <span class="s131">function, 83, 121, 209</span></p><p class="s48" style="padding-top: 3pt;padding-left: 18pt;text-indent: 0pt;text-align: left;">strncasecmp() <span class="s131">function, 213</span></p><p class="s48" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">strstr() <span class="s131">function, 216</span></p><p class="s131" style="padding-top: 1pt;padding-left: 18pt;text-indent: 0pt;text-align: left;">structs, 96–100</p><p class="s131" style="padding-left: 29pt;text-indent: 0pt;text-align: left;">access to elements, 98</p><p class="s48" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">su <span class="s131">command, 88</span></p><p class="s48" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">sub <span class="s131">instruction, 293, 294</span></p><p class="s48" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">sub <span class="s131">operation, 25</span></p><p class="s48" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">sudo <span class="s131">command, 88, 90</span></p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">superposition, 399–400</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;line-height: 109%;text-align: left;">suspended process, returning to, 158 switched network environment,</p><p class="s131" style="padding-left: 50pt;text-indent: 0pt;line-height: 10pt;text-align: left;">packets in, 239</p><p class="s131" style="padding-top: 1pt;padding-left: 18pt;text-indent: 0pt;text-align: left;">symmetric encryption, 398–400</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">SYN flags, 223</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">SYN flooding, 252–256</p><p class="s131" style="padding-left: 18pt;text-indent: 10pt;line-height: 109%;text-align: left;">preventing, 255 SYN scan</p><p class="s131" style="padding-left: 50pt;text-indent: -21pt;line-height: 109%;text-align: left;">preventing information leakage with, 268</p><p class="s131" style="padding-left: 86pt;text-indent: 0pt;text-align: center;">stealth, 264</p><p class="s131" style="padding-left: 86pt;text-indent: 0pt;text-align: center;">syncookies, 255</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">synflood.c file, 252–254</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">sys/stat.h file, 84</p><p class="s131" style="padding-left: 29pt;text-indent: 0pt;text-align: left;">bit flags defined in, 87</p><p class="s131" style="padding-top: 1pt;padding-left: 18pt;text-indent: 0pt;line-height: 109%;text-align: left;">system calls, manual pages for, 283 system daemons, 321–328</p><p class="s48" style="padding-left: 18pt;text-indent: 0pt;line-height: 11pt;text-align: left;">system() <span class="s131">function, 148–149</span></p><p class="s131" style="padding-left: 29pt;text-indent: 0pt;text-align: left;">returning into, 377–379</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part220.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part222.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
