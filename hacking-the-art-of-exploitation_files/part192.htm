<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>0x782 Keystream Reuse</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part191.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part193.htm">Next &gt;</a></p><p class="s32" style="padding-left: 91pt;text-indent: 0pt;text-align: left;"><a name="bookmark177">0x782 Keystream Reuse</a></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">Another potential problem with WEP lies in keystream reuse. If two plaintexts (<span class="s27">P </span>) are XORed with the same keystream to produce two separate ciphertexts (<span class="s27">C </span>), XORing those ciphertexts together will cancel out the keystream, resulting in the two plaintexts XORed with each other.</p><p style="padding-top: 5pt;padding-left: 109pt;text-indent: 0pt;text-align: left;"><span class="s27">C</span><span class="s110">1</span> = <span class="s27">P</span><span class="s110">1</span> <span class="s47"></span><span class="s95"> </span>RC4(seed)</p><p style="padding-top: 5pt;padding-left: 109pt;text-indent: 0pt;text-align: left;"><span class="s27">C</span><span class="s110">2</span> = <span class="s27">P</span><span class="s110">2</span> <span class="s47"></span><span class="s95"> </span>RC4(seed)</p><p class="s27" style="padding-top: 5pt;padding-left: 109pt;text-indent: 0pt;text-align: left;">C<span class="s102">1 </span><span class="s47"></span><span class="s95"> </span>C<span class="s102">2 </span><span class="s103">= [</span>P<span class="s102">1 </span><span class="s47"></span><span class="s95"> </span><span class="p">RC4(seed)] </span><span class="s47"></span><span class="s95"> </span><span class="p">[</span>P<span class="s102">2 </span><span class="s47"></span><span class="s95"> </span><span class="p">RC4(seed)] = </span>P<span class="s102">1 </span><span class="s47"></span><span class="s95"> </span>P<span class="s102">2</span></p><p style="padding-top: 4pt;padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">From here, if one of the plaintexts is known, the other one can easily be recovered. In addition, since the plaintexts in this case are Internet packets with a known and fairly predictable structure, various techniques can be employed to recover both original plaintexts.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">The IV is intended to prevent these types of attacks; without it, every packet would be encrypted with the same keystream. If a different IV is used for each packet, the keystreams for packets will also be different. However, if the same IV is reused, both packets will be encrypted with the same keystream. This is a condition that is easy to detect, since the IVs are included in plaintext in the encrypted packets. Moreover, the IVs used for WEP are only 24 bits in length, which nearly guarantees that IVs will be reused. Assuming that IVs are chosen at random, statistically there should be a case of keystream reuse after just 5,000 packets.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 106%;text-align: left;">This number seems surprisingly small due to a counterintuitive prob- abilistic phenomenon known as the <span class="s27">birthday paradox</span>. This paradox states that if 23 people are in the same room, two of these people should share a birthday. With 23 people, there are (23 · 22) / 2, or 253, possible pairs. Each pair has a probability of success of 1/365, or about 0.27 percent, which corresponds to a probability of failure of 1 <span class="s47"></span><span class="s95"> </span>(1 / 365), or about 99.726 percent. By raising this probability to the power of 253, the overall probability of failure is shown to be about 49.95 percent, meaning that the probability of success is just a little over 50 percent.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 106%;text-align: left;">This works the same way with IV collisions. With 5,000 packets, there are (5000 · 4999) / 2, or 12,497,500, possible pairs. Each pair has a probability of failure of 1 <span class="s47"></span><span class="s95"> </span>(1 / 2<span class="s41">24</span>). When this is raised to the power of the number of possible pairs, the overall probability of failure is about 47.5 percent, meaning that there’s a 52.5 percent chance of an IV collision with 5,000 packets:</p><p class="s108" style="padding-top: 7pt;padding-left: 86pt;text-indent: 0pt;line-height: 28%;text-align: center;">5<span class="s107"></span><span class="s122"> </span>000 <span class="s107"></span><span class="s122"> </span>4<span class="s123">-</span><span class="s107"></span><span class="s122"> </span>999</p><p style="padding-left: 151pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="39" height="0" alt="image" src="Image_1317.png"/></span></p><p class="s108" style="padding-left: 112pt;text-indent: 0pt;line-height: 6pt;text-align: left;">1 <span class="s122">– </span><span class="s124">⎛ </span>1 <span class="s122">– </span><span class="s125">-</span><span class="s126">1</span><span class="s125">-</span><span class="s124">⎞   </span><span class="s127">2   </span><span class="s128">= </span><span class="s28">52.5</span><span class="s129"></span></p><p class="s130" style="padding-left: 122pt;text-indent: 0pt;text-align: left;">⎝  <span class="s102">2</span><span class="s108">24</span>⎠</p><p style="padding-top: 3pt;padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">After an IV collision is discovered, some educated guesses about the structure of the plaintexts can be used to reveal the original plaintexts by XORing the two ciphertexts together. Also, if one of the plaintexts is known, the other plaintext can be recovered with a simple XORing. One method</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;">of obtaining known plaintexts might be through spam email, where the attacker sends the spam and the victim checks mail over the encrypted wireless connection.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part191.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part193.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
