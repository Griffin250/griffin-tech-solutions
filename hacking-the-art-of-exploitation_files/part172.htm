<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>0x721 Asymptotic Notation</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part171.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part173.htm">Next &gt;</a></p><p class="s32" style="padding-left: 91pt;text-indent: 0pt;text-align: justify;"><a name="bookmark157">0x721 Asymptotic Notation</a></p><p class="s27" style="padding-top: 7pt;padding-left: 91pt;text-indent: 0pt;text-align: justify;">Asymptotic notation <span class="p">is a way to express an algorithm’s efficiency. It’s called asymptotic because it deals with the behavior of the algorithm as the input size approaches the asymptotic limit of infinity.</span></p><p style="padding-left: 91pt;text-indent: 18pt;text-align: left;">Returning to the examples of the 2<span class="s27">n </span>+ 365 algorithm and the 2<span class="s27">n</span><span class="s41">2</span> + 5 algorithm, we determined that the 2<span class="s27">n </span>+ 365 algorithm is generally more efficient because it follows the trend of <span class="s27">n</span>, while the 2<span class="s27">n</span><span class="s41">2</span> + 5 algorithm follows the general trend of <span class="s27">n</span><span class="s41">2</span>. This means that 2<span class="s27">n </span>+ 365 is bounded above by a positive multiple of <span class="s27">n </span>for all sufficiently large <span class="s27">n</span>, and 2<span class="s27">n</span><span class="s41">2</span> + 5 is bounded above by a positive multiple of <span class="s27">n</span><span class="s41">2</span> for all sufficiently large <span class="s27">n</span>.</p><p style="padding-left: 91pt;text-indent: 18pt;text-align: left;">This sounds kind of confusing, but all it really means is that there exists a positive constant for the trend value and a lower bound on <span class="s27">n</span>, such that the trend value multiplied by the constant will always be greater than the time complexity for all <span class="s27">n </span>greater than the lower bound. In other words, 2<span class="s27">n</span><span class="s41">2</span> + 5 is in the order of <span class="s27">n</span><span class="s41">2</span>, and 2<span class="s27">n </span>+ 365 is in the order of <span class="s27">n</span>. There’s a convenient mathematical notation for this, called <span class="s27">big-oh notation</span>, which looks like O(<span class="s27">n</span><span class="s41">2</span>) to describe an algorithm that is in the order of <span class="s27">n</span><span class="s41">2</span>.</p><p style="padding-left: 91pt;text-indent: 17pt;text-align: left;">A simple way to convert an algorithm’s time complexity to big-oh notation is to simply look at the high-order terms, since these will be the terms that matter most as <span class="s27">n </span>becomes sufficiently large. So an algorithm with a time complexity of 3<span class="s27">n</span><span class="s41">4</span> + 43<span class="s27">n</span><span class="s41">3</span> + 763<span class="s27">n </span>+ log <span class="s27">n </span>+ 37 would be in the order of O(<span class="s27">n</span><span class="s41">4</span>), and 54<span class="s27">n</span><span class="s41">7</span> + 23<span class="s27">n</span><span class="s41">4</span> + 4325 would be O(<span class="s27">n</span><span class="s41">7</span>).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part173.htm">0x730 Symmetric Encryption</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part171.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part173.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
