<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>0x500</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part111.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part113.htm">Next &gt;</a></p><h1 style="padding-top: 12pt;padding-left: 86pt;text-indent: 0pt;text-align: center;"><a name="bookmark103">0x500</a></h1><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part113.htm">S H E LLC O D E</a><a class="toc1" href="part114.htm">So far, the shellcode used in our exploits has been just a string of copied and pasted bytes. We have seen standard shell-spawning shellcode for local exploits and port-binding shellcode for remote ones. Shellcode</a><a class="toc2" href="part115.htm">0x510 Assembly vs. C</a><a class="toc2" href="part116.htm">0x511 Linux System Calls in Assembly</a><a class="toc2" href="part118.htm">0x521 Assembly Instructions Using the Stack</a><a class="toc2" href="part119.htm">0x522 Investigating with GDB</a><a class="toc2" href="part120.htm">0x523 Removing Null Bytes</a><a class="toc2" href="part122.htm">0x531 A Matter of Privilege</a><a class="toc2" href="part123.htm">0x532 And Smaller Still</a><a class="toc2" href="part125.htm">0x541 Duplicating Standard File Descriptors</a><a class="toc2" href="part126.htm">0x542 Branching Control Structures</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part111.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part113.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
