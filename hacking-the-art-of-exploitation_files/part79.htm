<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>0x424 Internet Address Conversion</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part78.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part80.htm">Next &gt;</a></p><p class="s32" style="padding-left: 91pt;text-indent: 0pt;text-align: left;"><a name="bookmark68">0x424 Internet Address Conversion</a></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;">When you see 12.110.110.204, you probably recognize this as an Internet address (IP version 4). This familiar dotted-number notation is a common way to specify Internet addresses, and there are functions to convert this notation to and from a 32-bit integer in network byte order. These functions are defined in the arpa/inet.h include file, and the two most useful con- version functions are:</p><p class="s46" style="padding-top: 6pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">inet_aton(char *ascii_addr, struct in_addr *network_addr)</p><p class="s76" style="padding-top: 4pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">ASCII to Network</p><p style="padding-left: 109pt;text-indent: 0pt;line-height: 108%;text-align: left;">This function converts an ASCII string containing an IP address in dotted- number format into an <span class="s31">in_addr </span>structure, which, as you remember, only contains a 32-bit integer representing the IP address in network byte order.</p><p class="s46" style="padding-top: 6pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">inet_ntoa(struct in_addr *network_addr)</p><p class="s76" style="padding-top: 4pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">Network to ASCII</p><p style="padding-left: 109pt;text-indent: 0pt;line-height: 108%;text-align: left;">This function converts the other way. It is passed a pointer to an <span class="s31">in_addr </span>structure containing an IP address, and the function returns a character pointer to an ASCII string containing the IP address in dotted-number format. This string is held in a statically allocated memory buffer in the function, so it can be accessed until the next call to <span class="s31">inet_ntoa()</span>, when the string will be overwritten.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part78.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part80.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
