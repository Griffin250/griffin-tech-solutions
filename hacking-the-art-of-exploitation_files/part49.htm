<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>0x287 A Game of Chance</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part48.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part50.htm">Next &gt;</a></p><p class="s32" style="padding-left: 91pt;text-indent: 0pt;text-align: left;"><a name="bookmark39">0x287 A Game of Chance</a></p><p style="padding-top: 6pt;padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;">The final program in this section is a set of games of chance that use many of the concepts weâ€™ve discussed. The program uses pseudo-random number generator functions to provide the element of chance. It has three different game functions, which are called using a single global function pointer, and it uses structs to hold data for the player, which is saved in a file. Multi-user file permissions and user IDs allow multiple users to play and maintain their own account data. The game_of_chance.c program code is heavily documented, and you should be able to understand it at this point.</p><p class="s40" style="padding-top: 4pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">game_of_chance.c</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="540" height="1" alt="image" src="Image_321.png"/></span></p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 106%;text-align: left;">#include &lt;stdio.h&gt; #include &lt;string.h&gt; #include &lt;fcntl.h&gt; #include &lt;sys/stat.h&gt; #include &lt;time.h&gt; #include &lt;stdlib.h&gt; #include &quot;hacking.h&quot;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">#define DATAFILE &quot;/var/chance.data&quot; // File to store user data</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">// Custom user struct to store information about users struct user {</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">int uid; int credits;</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 107%;text-align: left;">int highscore; char name[100];</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">int (*current_game) ();</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">};</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">// Function prototypes int get_player_data();</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">void register_new_player(); void update_player_data(); void show_highscore(); void jackpot();</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 10pt;text-align: left;">void input_name();</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">void print_cards(char *, char *, int); int take_wager(int, int);</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 106%;text-align: left;">void play_the_game(); int pick_a_number(); int dealer_no_match(); int find_the_ace(); void fatal(char *);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">// Global variables</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">struct user player;   // Player struct</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">int main() {</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">int choice, last_game;</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 21pt;text-align: left;">srand(time(0)); // Seed the randomizer with the current time. if(get_player_data() == -1) // Try to read player data from file.</p><p class="s31" style="padding-top: 1pt;padding-left: 44pt;text-indent: 0pt;text-align: left;">register_new_player();  // If there is no data, register a new player.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">while(choice != 7) {</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;line-height: 107%;text-align: left;">printf(&quot;-=[ Game of Chance Menu ]=-\n&quot;); printf(&quot;1 - Play the Pick a Number game\n&quot;); printf(&quot;2 - Play the No Match Dealer game\n&quot;); printf(&quot;3 - Play the Find the Ace game\n&quot;); printf(&quot;4 - View current high score\n&quot;); printf(&quot;5 - Change your user name\n&quot;);</p><p class="s31" style="padding-top: 2pt;padding-left: 44pt;text-indent: 0pt;text-align: left;">printf(&quot;6 - Reset your account at 100 credits\n&quot;); printf(&quot;7 - Quit\n&quot;);</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">printf(&quot;[Name: %s]\n&quot;, player.name);</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;line-height: 107%;text-align: left;">printf(&quot;[You have %u credits] -&gt; &quot;, player.credits); scanf(&quot;%d&quot;, &amp;choice);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">if((choice &lt; 1) || (choice &gt; 7))</p><p class="s31" style="padding-left: 57pt;text-indent: 0pt;text-align: left;">printf(&quot;\n[!!] The number %d is an invalid selection.\n\n&quot;, choice);</p><p class="s31" style="padding-left: 70pt;text-indent: -25pt;text-align: left;">else if (choice &lt; 4) {     // Otherwise, choice was a game of some sort. if(choice != last_game) { // If the function ptr isn&#39;t set</p><p class="s31" style="padding-left: 95pt;text-indent: -12pt;line-height: 107%;text-align: left;">if(choice == 1)    // then point it at the selected game player.current_game = pick_a_number;</p><p class="s31" style="padding-left: 83pt;text-indent: 0pt;text-align: left;">else if(choice == 2)</p><p class="s31" style="padding-left: 83pt;text-indent: 12pt;line-height: 107%;text-align: left;">player.current_game = dealer_no_match; else</p><p class="s31" style="padding-left: 83pt;text-indent: 12pt;line-height: 107%;text-align: left;">player.current_game = find_the_ace; last_game = choice;  // and set last_game.</p><p class="s31" style="padding-left: 70pt;text-indent: 0pt;line-height: 10pt;text-align: left;">}</p><p class="s31" style="padding-left: 70pt;text-indent: 0pt;text-align: left;">play_the_game();     // Play the game.</p><p class="s31" style="padding-left: 57pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 57pt;text-indent: -12pt;text-align: left;">else if (choice == 4) show_highscore();</p><p class="s31" style="padding-left: 57pt;text-indent: -12pt;line-height: 106%;text-align: left;">else if (choice == 5) { printf(&quot;\nChange user name\n&quot;); printf(&quot;Enter your new name: &quot;); input_name();</p><p class="s31" style="padding-left: 57pt;text-indent: 0pt;text-align: left;">printf(&quot;Your name has been changed.\n\n&quot;);</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">else if (choice == 6) {</p><p class="s31" style="padding-left: 57pt;text-indent: 0pt;line-height: 107%;text-align: left;">printf(&quot;\nYour account has been reset with 100 credits.\n\n&quot;); player.credits = 100;</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">update_player_data();</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">printf(&quot;\nThanks for playing! Bye.\n&quot;);</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">// This function reads the player data for the current uid</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">// from the file. It returns -1 if it is unable to find player</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">// data for the current uid. int get_player_data() {</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 107%;text-align: left;">int fd, uid, read_bytes; struct user entry;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">uid = getuid();</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">fd = open(DATAFILE, O_RDONLY);</p><p class="s31" style="padding-left: 44pt;text-indent: -12pt;line-height: 107%;text-align: left;">if(fd == -1) // Can&#39;t open the file, maybe it doesn&#39;t exist return -1;</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 107%;text-align: left;">read_bytes = read(fd, &amp;entry, sizeof(struct user));  // Read the first chunk. while(entry.uid != uid &amp;&amp; read_bytes &gt; 0) { // Loop until proper uid is found.</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">read_bytes = read(fd, &amp;entry, sizeof(struct user)); // Keep reading.</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">close(fd); // Close the file.</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">if(read_bytes &lt; sizeof(struct user)) // This means that the end of file was reached.</p><p class="s31" style="padding-top: 2pt;padding-left: 32pt;text-indent: 12pt;text-align: left;">return -1; else</p><p class="s31" style="padding-left: 32pt;text-indent: 12pt;line-height: 107%;text-align: left;">player = entry; // Copy the read entry into the player struct. return 1;     // Return a success.</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">// This is the new user registration function.</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">// It will create a new player account and append it to the file. void register_new_player() {</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 10pt;text-align: left;">int fd;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 107%;text-align: left;">printf(&quot;-=-={ New Player Registration }=-=-\n&quot;); printf(&quot;Enter your name: &quot;);</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 10pt;text-align: left;">input_name();</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">player.uid = getuid();</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">player.highscore = player.credits = 100;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">fd = open(DATAFILE, O_WRONLY|O_CREAT|O_APPEND, S_IRUSR|S_IWUSR);</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">if(fd == -1)</p><p class="s31" style="padding-left: 32pt;text-indent: 12pt;text-align: left;">fatal(&quot;in register_new_player() while opening file&quot;); write(fd, &amp;player, sizeof(struct user));</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">close(fd);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">printf(&quot;\nWelcome to the Game of Chance %s.\n&quot;, player.name); printf(&quot;You have been given %u credits.\n&quot;, player.credits);</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">// This function writes the current player data to the file.</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">// It is used primarily for updating the credits after games. void update_player_data() {</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 107%;text-align: left;">int fd, i, read_uid; char burned_byte;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">fd = open(DATAFILE, O_RDWR);</p><p class="s31" style="padding-left: 44pt;text-indent: -12pt;line-height: 107%;text-align: left;">if(fd == -1) // If open fails here, something is really wrong. fatal(&quot;in update_player_data() while opening file&quot;);</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 107%;text-align: left;">read(fd, &amp;read_uid, 4);     // Read the uid from the first struct. while(read_uid != player.uid) { // Loop until correct uid is found.</p><p class="s31" style="padding-left: 57pt;text-indent: -12pt;line-height: 107%;text-align: left;">for(i=0; i &lt; sizeof(struct user) - 4; i++)  // Read through the read(fd, &amp;burned_byte, 1);         // rest of that struct.</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;line-height: 10pt;text-align: left;">read(fd, &amp;read_uid, 4);   // Read the uid from the next struct.</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 106%;text-align: left;">write(fd, &amp;(player.credits), 4);  // Update credits. write(fd, &amp;(player.highscore), 4); // Update highscore. write(fd, &amp;(player.name), 100);   // Update name. close(fd);</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">// This function will display the current high score and</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">// the name of the person who set that high score. void show_highscore() {</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">unsigned int top_score = 0; char top_name[100];</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">struct user entry;</p><p class="s31" style="padding-top: 2pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">int fd;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 107%;text-align: left;">printf(&quot;\n====================| HIGH SCORE |====================\n&quot;); fd = open(DATAFILE, O_RDONLY);</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">if(fd == -1)</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">fatal(&quot;in show_highscore() while opening file&quot;);</p><p class="s31" style="padding-left: 44pt;text-indent: -12pt;line-height: 107%;text-align: left;">while(read(fd, &amp;entry, sizeof(struct user)) &gt; 0) { // Loop until end of file. if(entry.highscore &gt; top_score) {  // If there is a higher score,</p><p class="s31" style="padding-left: 70pt;text-indent: 0pt;text-align: left;">top_score = entry.highscore; // set top_score to that score strcpy(top_name, entry.name); // and top_name to that username.</p><p class="s31" style="padding-left: 57pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">close(fd);</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">if(top_score &gt; player.highscore)</p><p class="s31" style="padding-left: 32pt;text-indent: 12pt;line-height: 107%;text-align: left;">printf(&quot;%s has the high score of %u\n&quot;, top_name, top_score); else</p><p class="s31" style="padding-left: 32pt;text-indent: 12pt;text-align: left;">printf(&quot;You currently have the high score of %u credits!\n&quot;, player.highscore); printf(&quot;======================================================\n\n&quot;);</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">// This function simply awards the jackpot for the Pick a Number game. void jackpot() {</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 107%;text-align: left;">printf(&quot;*+*+*+*+*+* JACKPOT *+*+*+*+*+*\n&quot;); printf(&quot;You have won the jackpot of 100 credits!\n&quot;); player.credits += 100;</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 10pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">// This function is used to input the player name, since</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">// scanf(&quot;%s&quot;, &amp;whatever) will stop input at the first space. void input_name() {</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">char *name_ptr, input_char=&#39;\n&#39;;</p><p class="s31" style="padding-left: 44pt;text-indent: -12pt;line-height: 107%;text-align: left;">while(input_char == &#39;\n&#39;)  // Flush any leftover scanf(&quot;%c&quot;, &amp;input_char); // newline chars.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 107%;text-align: left;">name_ptr = (char *) &amp;(player.name); // name_ptr = player name&#39;s address while(input_char != &#39;\n&#39;) { // Loop until newline.</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">*name_ptr = input_char;  // Put the input char into name field. scanf(&quot;%c&quot;, &amp;input_char); // Get the next char.</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">name_ptr++;       // Increment the name pointer.</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">*name_ptr = 0; // Terminate the string.</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">// This function prints the 3 cards for the Find the Ace game.</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">// It expects a message to display, a pointer to the cards array,</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">// and the card the user has picked as input. If the user_pick is</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">// -1, then the selection numbers are displayed.</p><p class="s31" style="padding-left: 32pt;text-indent: -12pt;line-height: 107%;text-align: left;">void print_cards(char *message, char *cards, int user_pick) { int i;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 107%;text-align: left;">printf(&quot;\n\t*** %s ***\n&quot;, message); printf(&quot;    \t._.\t._.\t._.\n&quot;);</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">printf(&quot;Cards:\t|%c|\t|%c|\t|%c|\n\t&quot;, cards[0], cards[1], cards[2]); if(user_pick == -1)</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">printf(&quot; 1 \t 2 \t 3\n&quot;);</p><p class="s31" style="padding-top: 2pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">else {</p><p class="s31" style="padding-left: 57pt;text-indent: -12pt;line-height: 107%;text-align: left;">for(i=0; i &lt; user_pick; i++) printf(&quot;\t&quot;);</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">printf(&quot; ^-- your pick\n&quot;);</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">// This function inputs wagers for both the No Match Dealer and</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">// Find the Ace games. It expects the available credits and the</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">// previous wager as arguments. The previous_wager is only important</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">// for the second wager in the Find the Ace game. The function</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">// returns -1 if the wager is too big or too little, and it returns</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">// the wager amount otherwise.</p><p class="s31" style="padding-left: 32pt;text-indent: -12pt;line-height: 107%;text-align: left;">int take_wager(int available_credits, int previous_wager) { int wager, total_wager;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">printf(&quot;How many of your %d credits would you like to wager? &quot;, available_credits); scanf(&quot;%d&quot;, &amp;wager);</p><p class="s31" style="padding-left: 44pt;text-indent: -12pt;line-height: 107%;text-align: left;">if(wager &lt; 1) {  // Make sure the wager is greater than 0. printf(&quot;Nice try, but you must wager a positive number!\n&quot;); return -1;</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 10pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">total_wager = previous_wager + wager;</p><p class="s31" style="padding-left: 44pt;text-indent: -12pt;line-height: 107%;text-align: left;">if(total_wager &gt; available_credits) {  // Confirm available credits printf(&quot;Your total wager of %d is more than you have!\n&quot;, total_wager);</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;line-height: 107%;text-align: left;">printf(&quot;You only have %d available credits, try again.\n&quot;, available_credits); return -1;</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 10pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">return wager;</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">// This function contains a loop to allow the current game to be</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">// played again. It also writes the new credit totals to file</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">// after each game is played. void play_the_game() {</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 106%;text-align: left;">int play_again = 1; int (*game) (); char selection;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">while(play_again) {</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">printf(&quot;\n[DEBUG] current_game pointer @ 0x%08x\n&quot;, player.current_game); if(player.current_game() != -1) {    // If the game plays without error and</p><p class="s31" style="padding-left: 70pt;text-indent: -12pt;line-height: 107%;text-align: left;">if(player.credits &gt; player.highscore)  // a new high score is set, player.highscore = player.credits;  // update the highscore.</p><p class="s31" style="padding-left: 57pt;text-indent: 0pt;text-align: left;">printf(&quot;\nYou now have %u credits\n&quot;, player.credits);</p><p class="s31" style="padding-left: 57pt;text-indent: 0pt;line-height: 107%;text-align: left;">update_player_data();        // Write the new credit total to file. printf(&quot;Would you like to play again? (y/n) &quot;);</p><p class="s31" style="padding-left: 57pt;text-indent: 0pt;text-align: left;">selection = &#39;\n&#39;;</p><p class="s31" style="padding-left: 70pt;text-indent: -12pt;text-align: left;">while(selection == &#39;\n&#39;)       // Flush any extra newlines. scanf(&quot;%c&quot;, &amp;selection);</p><p class="s31" style="padding-left: 70pt;text-indent: -12pt;line-height: 107%;text-align: left;">if(selection == &#39;n&#39;) play_again = 0;</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 57pt;text-indent: -12pt;line-height: 107%;text-align: left;">else        // This means the game returned an error, play_again = 0; // so return to main menu.</p><p class="s31" style="padding-top: 2pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">// This function is the Pick a Number game.</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">// It returns -1 if the player doesn&#39;t have enough credits. int pick_a_number() {</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">int pick, winning_number;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">printf(&quot;\n####### Pick a Number ######\n&quot;);</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 107%;text-align: left;">printf(&quot;This game costs 10 credits to play. Simply pick a number\n&quot;); printf(&quot;between 1 and 20, and if you pick the winning number, you\n&quot;); printf(&quot;will win the jackpot of 100 credits!\n\n&quot;);</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">winning_number = (rand() % 20) + 1; // Pick a number between 1 and 20. if(player.credits &lt; 10) {</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;line-height: 107%;text-align: left;">printf(&quot;You only have %d credits. That&#39;s not enough to play!\n\n&quot;, player.credits); return -1;  // Not enough credits to play</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">player.credits -= 10; // Deduct 10 credits.</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 107%;text-align: left;">printf(&quot;10 credits have been deducted from your account.\n&quot;); printf(&quot;Pick a number between 1 and 20: &quot;);</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">scanf(&quot;%d&quot;, &amp;pick);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 32pt;text-indent: 0pt;line-height: 107%;text-align: left;">printf(&quot;The winning number is %d\n&quot;, winning_number); if(pick == winning_number)</p><p class="s31" style="padding-left: 32pt;text-indent: 12pt;text-align: left;">jackpot(); else</p><p class="s31" style="padding-left: 32pt;text-indent: 12pt;line-height: 107%;text-align: left;">printf(&quot;Sorry, you didn&#39;t win.\n&quot;); return 0;</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">// This is the No Match Dealer game.</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">// It returns -1 if the player has 0 credits. int dealer_no_match() {</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 10pt;text-align: left;">int i, j, numbers[16], wager = -1, match = -1;</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">printf(&quot;\n::::::: No Match Dealer :::::::\n&quot;);</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 106%;text-align: left;">printf(&quot;In this game, you can wager up to all of your credits.\n&quot;); printf(&quot;The dealer will deal out 16 random numbers between 0 and 99.\n&quot;); printf(&quot;If there are no matches among them, you double your money!\n\n&quot;);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">if(player.credits == 0) {</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;line-height: 107%;text-align: left;">printf(&quot;You don&#39;t have any credits to wager!\n\n&quot;); return -1;</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">while(wager == -1)</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">wager = take_wager(player.credits, 0);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 107%;text-align: left;">printf(&quot;\t\t::: Dealing out 16 random numbers :::\n&quot;); for(i=0; i &lt; 16; i++) {</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;line-height: 107%;text-align: left;">numbers[i] = rand() % 100; // Pick a number between 0 and 99. printf(&quot;%2d\t&quot;, numbers[i]);</p><p class="s31" style="padding-left: 57pt;text-indent: -12pt;line-height: 107%;text-align: left;">if(i%8 == 7)        // Print a line break every 8 numbers. printf(&quot;\n&quot;);</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 9pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">for(i=0; i &lt; 15; i++) {   // Loop looking for matches.</p><p class="s31" style="padding-top: 2pt;padding-left: 44pt;text-indent: 0pt;text-align: left;">j = i + 1; while(j &lt; 16) {</p><p class="s31" style="padding-left: 70pt;text-indent: -12pt;line-height: 107%;text-align: left;">if(numbers[i] == numbers[j]) match = numbers[i];</p><p class="s31" style="padding-left: 57pt;text-indent: 0pt;text-align: left;">j++;</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">if(match != -1) {</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;line-height: 106%;text-align: left;">printf(&quot;The dealer matched the number %d!\n&quot;, match); printf(&quot;You lose %d credits.\n&quot;, wager); player.credits -= wager;</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">} else {</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">printf(&quot;There were no matches! You win %d credits!\n&quot;, wager); player.credits += wager;</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">return 0;</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">// This is the Find the Ace game.</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">// It returns -1 if the player has 0 credits. int find_the_ace() {</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 10pt;text-align: left;">int i, ace, total_wager;</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 107%;text-align: left;">int invalid_choice, pick = -1, wager_one = -1, wager_two = -1; char choice_two, cards[3] = {&#39;X&#39;, &#39;X&#39;, &#39;X&#39;};</p><p class="s31" style="padding-top: 1pt;padding-left: 32pt;text-indent: 0pt;line-height: 21pt;text-align: left;">ace = rand()%3; // Place the ace randomly. printf(&quot;******* Find the Ace *******\n&quot;);</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 8pt;text-align: left;">printf(&quot;In this game, you can wager up to all of your credits.\n&quot;);</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 106%;text-align: left;">printf(&quot;Three cards will be dealt out, two queens and one ace.\n&quot;); printf(&quot;If you find the ace, you will win your wager.\n&quot;); printf(&quot;After choosing a card, one of the queens will be revealed.\n&quot;); printf(&quot;At this point, you may either select a different card or\n&quot;); printf(&quot;increase your wager.\n\n&quot;);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">if(player.credits == 0) {</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">printf(&quot;You don&#39;t have any credits to wager!\n\n&quot;); return -1;</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 44pt;text-indent: -12pt;text-align: left;">while(wager_one == -1) // Loop until valid wager is made. wager_one = take_wager(player.credits, 0);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 107%;text-align: left;">print_cards(&quot;Dealing cards&quot;, cards, -1); pick = -1;</p><p class="s31" style="padding-left: 44pt;text-indent: -12pt;line-height: 107%;text-align: left;">while((pick &lt; 1) || (pick &gt; 3)) { // Loop until valid pick is made. printf(&quot;Select a card: 1, 2, or 3 &quot;);</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">scanf(&quot;%d&quot;, &amp;pick);</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;line-height: 107%;text-align: left;">pick--; // Adjust the pick since card numbering starts at 0. i=0;</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">while(i == ace || i == pick) // Keep looping until</p><p class="s31" style="padding-left: 32pt;text-indent: 12pt;text-align: left;">i++;           // we find a valid queen to reveal. cards[i] = &#39;Q&#39;;</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">print_cards(&quot;Revealing a queen&quot;, cards, pick);</p><p class="s31" style="padding-top: 2pt;padding-left: 32pt;text-indent: 0pt;text-align: left;">invalid_choice = 1;</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">while(invalid_choice) {   // Loop until valid choice is made.</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;line-height: 107%;text-align: left;">printf(&quot;Would you like to:\n[c]hange your pick\tor\t[i]ncrease your wager?\n&quot;); printf(&quot;Select c or i: &quot;);</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">choice_two = &#39;\n&#39;;</p><p class="s31" style="padding-left: 57pt;text-indent: -12pt;line-height: 107%;text-align: left;">while(choice_two == &#39;\n&#39;) // Flush extra newlines. scanf(&quot;%c&quot;, &amp;choice_two);</p><p class="s31" style="padding-left: 70pt;text-indent: -25pt;line-height: 107%;text-align: left;">if(choice_two == &#39;i&#39;) {  // Increase wager. invalid_choice=0;  // This is a valid choice.</p><p class="s31" style="padding-left: 83pt;text-indent: -13pt;line-height: 107%;text-align: left;">while(wager_two == -1)  // Loop until valid second wager is made. wager_two = take_wager(player.credits, wager_one);</p><p class="s31" style="padding-left: 57pt;text-indent: 0pt;line-height: 10pt;text-align: left;">}</p><p class="s31" style="padding-left: 57pt;text-indent: -12pt;text-align: left;">if(choice_two == &#39;c&#39;) {  // Change pick. i = invalid_choice = 0; // Valid choice</p><p class="s31" style="padding-left: 70pt;text-indent: -12pt;line-height: 107%;text-align: left;">while(i == pick || cards[i] == &#39;Q&#39;) // Loop until the other card i++;               // is found,</p><p class="s31" style="padding-left: 57pt;text-indent: 0pt;text-align: left;">pick = i;              // and then swap pick. printf(&quot;Your card pick has been changed to card %d\n&quot;, pick+1);</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 44pt;text-indent: -12pt;line-height: 107%;text-align: left;">for(i=0; i &lt; 3; i++) { // Reveal all of the cards. if(ace == i)</p><p class="s31" style="padding-left: 44pt;text-indent: 12pt;line-height: 107%;text-align: left;">cards[i] = &#39;A&#39;; else</p><p class="s31" style="padding-left: 57pt;text-indent: 0pt;line-height: 10pt;text-align: left;">cards[i] = &#39;Q&#39;;</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">print_cards(&quot;End result&quot;, cards, pick);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">if(pick == ace) { // Handle win.</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;line-height: 107%;text-align: left;">printf(&quot;You have won %d credits from your first wager\n&quot;, wager_one); player.credits += wager_one;</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">if(wager_two != -1) {</p><p class="s31" style="padding-left: 57pt;text-indent: 0pt;line-height: 107%;text-align: left;">printf(&quot;and an additional %d credits from your second wager!\n&quot;, wager_two); player.credits += wager_two;</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">} else { // Handle loss.</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;line-height: 107%;text-align: left;">printf(&quot;You have lost %d credits from your first wager\n&quot;, wager_one); player.credits -= wager_one;</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">if(wager_two != -1) {</p><p class="s31" style="padding-left: 57pt;text-indent: 0pt;text-align: left;">printf(&quot;and an additional %d credits from your second wager!\n&quot;, wager_two); player.credits -= wager_two;</p><p class="s31" style="padding-left: 44pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">}</p><p class="s31" style="padding-left: 32pt;text-indent: 0pt;text-align: left;">return 0;</p><p class="s31" style="padding-bottom: 3pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">}</p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="540" height="1" alt="image" src="Image_322.png"/></span></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">Since this is a multi-user program that writes to a file in the /var dir- ectory, it must be suid root.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_323.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">reader@hacking:~/booksrc $ gcc -o game_of_chance game_of_chance.c reader@hacking:~/booksrc $ sudo chown root:root ./game_of_chance reader@hacking:~/booksrc $ sudo chmod u+s ./game_of_chance reader@hacking:~/booksrc $ ./game_of_chance</p><p class="s31" style="padding-top: 2pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">-=-={ New Player Registration }=-=- Enter your name: Jon Erickson</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">Welcome to the Game of Chance, Jon Erickson. You have been given 100 credits.</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 10pt;text-align: left;">-=[ Game of Chance Menu ]=-</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">1 - Play the Pick a Number game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">2 - Play the No Match Dealer game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">3 - Play the Find the Ace game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">4 - View current high score</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">5 - Change your username</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">6 - Reset your account at 100 credits</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">7 - Quit</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">[Name: Jon Erickson]</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">[You have 100 credits] -&gt; 1</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 21pt;text-align: left;">[DEBUG] current_game pointer @ 0x08048e6e ####### Pick a Number ######</p><p class="s31" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">This game costs 10 credits to play. Simply pick a number between 1 and 20, and if you pick the winning number, you will win the jackpot of 100 credits!</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">10 credits have been deducted from your account. Pick a number between 1 and 20: 7</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">The winning number is 14. Sorry, you didn&#39;t win.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">You now have 90 credits.</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">Would you like to play again? (y/n) n</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">-=[ Game of Chance Menu ]=-</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">1 - Play the Pick a Number game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">2 - Play the No Match Dealer game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">3 - Play the Find the Ace game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">4 - View current high score</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">5 - Change your username</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">6 - Reset your account at 100 credits</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">7 - Quit</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">[Name: Jon Erickson]</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">[You have 90 credits] -&gt; 2</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">[DEBUG] current_game pointer @ 0x08048f61</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">::::::: No Match Dealer :::::::</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">In this game you can wager up to all of your credits.</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">The dealer will deal out 16 random numbers between 0 and 99. If there are no matches among them, you double your money!</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">How many of your 90 credits would you like to wager? 30</p><p class="s31" style="padding-bottom: 1pt;padding-left: 159pt;text-indent: 0pt;text-align: left;">::: Dealing out 16 random numbers :::</p><table style="border-collapse:collapse;margin-left:88.94pt" cellspacing="0"><tr style="height:10pt"><td style="width:24pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">88</p></td><td style="width:34pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 9pt;text-align: left;">68</p></td><td style="width:34pt"><p class="s42" style="padding-left: 11pt;padding-right: 11pt;text-indent: 0pt;line-height: 9pt;text-align: center;">82</p></td><td style="width:34pt"><p class="s42" style="padding-left: 11pt;padding-right: 11pt;text-indent: 0pt;line-height: 9pt;text-align: center;">51</p></td><td style="width:34pt"><p class="s42" style="padding-left: 11pt;padding-right: 11pt;text-indent: 0pt;line-height: 9pt;text-align: center;">21</p></td><td style="width:34pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 9pt;text-align: left;">73</p></td><td style="width:34pt"><p class="s42" style="padding-left: 11pt;padding-right: 11pt;text-indent: 0pt;line-height: 9pt;text-align: center;">80</p></td><td style="width:23pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: right;">50</p></td></tr><tr style="height:10pt"><td style="width:24pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">11</p></td><td style="width:34pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 9pt;text-align: left;">64</p></td><td style="width:34pt"><p class="s42" style="padding-left: 11pt;padding-right: 11pt;text-indent: 0pt;line-height: 9pt;text-align: center;">78</p></td><td style="width:34pt"><p class="s42" style="padding-left: 11pt;padding-right: 11pt;text-indent: 0pt;line-height: 9pt;text-align: center;">85</p></td><td style="width:34pt"><p class="s42" style="padding-left: 11pt;padding-right: 11pt;text-indent: 0pt;line-height: 9pt;text-align: center;">39</p></td><td style="width:34pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 9pt;text-align: left;">42</p></td><td style="width:34pt"><p class="s42" style="padding-left: 11pt;padding-right: 11pt;text-indent: 0pt;line-height: 9pt;text-align: center;">40</p></td><td style="width:23pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: right;">95</p></td></tr></table><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 212%;text-align: left;">There were no matches! You win 30 credits! You now have 120 credits</p><p class="s31" style="padding-top: 2pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">Would you like to play again? (y/n) n</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">-=[ Game of Chance Menu ]=-</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">1 - Play the Pick a Number game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">2 - Play the No Match Dealer game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">3 - Play the Find the Ace game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">4 - View current high score</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">5 - Change your username</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">6 - Reset your account at 100 credits</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">7 - Quit</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">[Name: Jon Erickson]</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">[You have 120 credits] -&gt; 3</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">[DEBUG] current_game pointer @ 0x0804914c</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">******* Find the Ace *******</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">In this game you can wager up to all of your credits. Three cards will be dealt: two queens and one ace.</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">If you find the ace, you will win your wager.</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">After choosing a card, one of the queens will be revealed. At this point you may either select a different card or increase your wager.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">How many of your 120 credits would you like to wager? 50</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 125pt;text-indent: 0pt;text-align: left;">*** Dealing cards ***</p><p class="s31" style="padding-left: 91pt;text-indent: 34pt;text-align: left;">._.   ._.   ._. Cards: |X|   |X|   |X|</p><p class="s31" style="padding-left: 129pt;text-indent: 0pt;text-align: left;">1    2    3</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">Select a card: 1, 2, or 3: 2</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 125pt;text-indent: 0pt;text-align: left;">*** Revealing a queen ***</p><p class="s31" style="padding-left: 91pt;text-indent: 34pt;line-height: 107%;text-align: left;">._.   ._.   ._. Cards: |X|   |X|   |Q|</p><p class="s31" style="padding-left: 163pt;text-indent: 0pt;text-align: left;">^-- your pick</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">Would you like to</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">[c]hange your pick   or   [i]ncrease your wager? Select c or i: c</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">Your card pick has been changed to card 1.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 125pt;text-indent: 0pt;text-align: left;">*** End result ***</p><p class="s31" style="padding-left: 91pt;text-indent: 34pt;line-height: 107%;text-align: left;">._.   ._.   ._. Cards: |A|   |Q|   |Q|</p><p class="s31" style="padding-left: 129pt;text-indent: 0pt;line-height: 10pt;text-align: left;">^-- your pick</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">You have won 50 credits from your first wager.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">You now have 170 credits.</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">Would you like to play again? (y/n) n</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">-=[ Game of Chance Menu ]=-</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">1 - Play the Pick a Number game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">2 - Play the No Match Dealer game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">3 - Play the Find the Ace game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">4 - View current high score</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">5 - Change your username</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">6 - Reset your account at 100 credits</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">7 - Quit</p><p class="s31" style="padding-top: 2pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">[Name: Jon Erickson]</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">[You have 170 credits] -&gt; 4</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">====================| HIGH SCORE |====================</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">You currently have the high score of 170 credits!</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">======================================================</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">-=[ Game of Chance Menu ]=-</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">1 - Play the Pick a Number game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">2 - Play the No Match Dealer game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">3 - Play the Find the Ace game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">4 - View current high score</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">5 - Change your username</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">6 - Reset your account at 100 credits</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">7 - Quit</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">[Name: Jon Erickson]</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">[You have 170 credits] -&gt; 7</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">Thanks for playing! Bye. reader@hacking:~/booksrc $ sudo su jose</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">jose@hacking:/home/reader/booksrc $ ./game_of_chance</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">-=-={ New Player Registration }=-=- Enter your name: Jose Ronnick</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">Welcome to the Game of Chance Jose Ronnick. You have been given 100 credits.</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">-=[ Game of Chance Menu ]=-</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">1 - Play the Pick a Number game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">2 - Play the No Match Dealer game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">3 - Play the Find the Ace game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">4 - View current high score 5 - Change your username</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">6 - Reset your account at 100 credits</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">7 - Quit</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">[Name: Jose Ronnick]</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">[You have 100 credits] -&gt; 4</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">====================| HIGH SCORE |====================</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">Jon Erickson has the high score of 170.</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">======================================================</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">-=[ Game of Chance Menu ]=-</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">1 - Play the Pick a Number game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">2 - Play the No Match Dealer game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">3 - Play the Find the Ace game</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">4 - View current high score</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">5 - Change your username</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">6 - Reset your account at 100 credits</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">7 - Quit</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">[Name: Jose Ronnick]</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">[You have 100 credits] -&gt; 7</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">Thanks for playing! Bye. jose@hacking:~/booksrc $ exit exit</p><p class="s31" style="padding-bottom: 3pt;padding-left: 91pt;text-indent: 0pt;line-height: 10pt;text-align: left;">reader@hacking:~/booksrc $</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_324.png"/></span></p><p style="padding-top: 3pt;padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">Play around with this program a little bit. The Find the Ace game is a demonstration of a principle of conditional probability; although it is counter- intuitive, changing your pick will increase your chances of finding the ace from 33 percent to 50 percent. Many people have difficulty understanding this truthâ€”thatâ€™s why itâ€™s counterintuitive. The secret of hacking is under- standing little-known truths like this and using them to produce seemingly magical results.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part48.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part50.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
