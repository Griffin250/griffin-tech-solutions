<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>0x610 Countermeasures That Detect</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part130.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part132.htm">Next &gt;</a></p><p class="s30" style="padding-left: 37pt;text-indent: 0pt;text-align: left;"><a name="bookmark118">0x610 Countermeasures That Detect</a></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;">The first group of countermeasures tries to detect the intrusion and respond in some way. The detection process could be anything from an administrator reading logs to a program sniffing the network. The response might include killing the connection or process automatically, or just the administrator scrutinizing everything from the machine’s console.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">As a system administrator, the exploits you know about aren’t nearly as dangerous as the ones you don’t. The sooner an intrusion is detected, the sooner it can be dealt with and the more likely it can be contained. Intrusions that aren’t discovered for months can be cause for concern.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">The way to detect an intrusion is to anticipate what the attacking hacker is going to do. If you know that, then you know what to look for. Counter- measures that detect can look for these attack patterns in log files, network packets, or even program memory. After an intrusion is detected, the hacker can be expunged from the system, any filesystem damage can be undone by restoring from backup, and the exploited vulnerability can be identified and patched. Detecting countermeasures are quite powerful in an electronic world with backup and restore capabilities.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">For the attacker, this means detection can counteract everything he does. Since the detection might not always be immediate, there are a few “smash and grab” scenarios where it doesn’t matter; however, even then it’s better not to leave tracks. Stealth is one of the hacker’s most valuable assets. Exploit- ing a vulnerable program to get a root shell means you can do whatever you want on that system, but avoiding detection additionally means no one knows you’re there. The combination of “God mode” and invisibility makes for a dangerous hacker. From a concealed position, passwords and data can be quietly sniffed from the network, programs can be backdoored, and further attacks can be launched on other hosts. To stay hidden, you simply need to anticipate the detection methods that might be used. If you know what they are looking for, you can avoid certain exploit patterns or mimic valid ones. The co-evolutionary cycle between hiding and detecting is fueled by thinking of the things the other side hasn’t thought of.</p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part130.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part132.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
