<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>L</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part213.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part215.htm">Next &gt;</a></p><p class="s5" style="padding-top: 4pt;padding-left: 26pt;text-indent: 0pt;text-align: left;">L</p><p class="s131" style="padding-top: 4pt;padding-left: 26pt;text-indent: 0pt;text-align: left;">LaMacchia, David, 118</p><p class="s131" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">LaMacchia Loophole, 117–118</p><p class="s131" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">Laurie, Adam, 256</p><p class="s131" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">LB (local base) pointer, 70</p><p class="s48" style="padding-left: 59pt;text-indent: -32pt;line-height: 109%;text-align: left;">lea <span class="s131">(Load Effective Address) instruction, 35, 296</span></p><p class="s131" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">least significant byte, 174, 178</p><p class="s48" style="padding-left: 26pt;text-indent: 0pt;line-height: 109%;text-align: left;">leave <span class="s131">instruction, 132 less than operator (</span>&lt;<span class="s131">), 14</span></p><p class="s131" style="padding-left: 26pt;text-indent: 0pt;line-height: 109%;text-align: left;">less than or equal to operator (<span class="s48">&lt;=</span>), 14 libc, returning into, 376–377</p><p class="s131" style="padding-left: 59pt;text-indent: -32pt;line-height: 109%;text-align: left;">libc function, finding location, 377–378</p><p class="s131" style="padding-left: 37pt;text-indent: -10pt;line-height: 109%;text-align: left;">libnet library (C), 244 documentation for functions,</p><p class="s131" style="padding-left: 59pt;text-indent: 0pt;text-align: left;">248–249</p><p class="s131" style="padding-left: 37pt;text-indent: 0pt;text-align: left;">release, 254</p><p class="s131" style="padding-left: 37pt;text-indent: 0pt;text-align: left;">structures, 263</p><p class="s48" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">libnet_build_arp() <span class="s131">function, 248–249</span></p><p class="s48" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">libnet_build_ethernet() <span class="s131">function, 248</span></p><p class="s48" style="padding-top: 1pt;padding-left: 26pt;text-indent: 0pt;text-align: left;">libnet_close_link_interface()</p><p class="s131" style="padding-top: 1pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">function, 249</p><p class="s131" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">libnet-config program, 254</p><p class="s48" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">libnet_destroy_packet() <span class="s131">function, 249</span></p><p class="s48" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">libnet_get_hwaddr() <span class="s131">function, 251</span></p><p class="s48" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">libnet_get_ipaddr() <span class="s131">function, 251</span></p><p class="s48" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">libnet_get_prand() <span class="s131">function, 252</span></p><p class="s48" style="padding-top: 1pt;padding-left: 26pt;text-indent: 0pt;text-align: left;">libnet_host_lookup() <span class="s131">function, 251</span></p><p class="s48" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">libnet_init_packet() <span class="s131">function, 248</span></p><p class="s48" style="padding-top: 1pt;padding-left: 26pt;text-indent: 0pt;text-align: left;">libnet_open_link_interface()</p><p class="s131" style="padding-top: 1pt;padding-left: 59pt;text-indent: 0pt;text-align: left;">function, 248</p><p class="s48" style="padding-top: 1pt;padding-left: 26pt;text-indent: 0pt;text-align: left;">libnet_seed_prand() <span class="s131">function, 252</span></p><p class="s131" style="padding-left: 26pt;text-indent: 0pt;line-height: 107%;text-align: left;">libpcap sniffer, 228–230, 235, 260 libraries</p><p class="s131" style="padding-left: 37pt;text-indent: 0pt;text-align: left;">documentation, 251</p><p class="s131" style="padding-left: 37pt;text-indent: 0pt;text-align: left;">of functions, 19</p><p class="s131" style="padding-left: 37pt;text-indent: -10pt;line-height: 109%;text-align: left;">Linux environment, 19 booting from CD, 4 nonexecutable stack, 376</p><p class="s131" style="padding-left: 26pt;text-indent: 10pt;line-height: 109%;text-align: left;">system calls in assembly, 284–286 linux-gate</p><p class="s131" style="padding-left: 37pt;text-indent: 0pt;line-height: 109%;text-align: left;">bouncing off, 384–388 execution jump to, 386</p><p class="s131" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">linux/net.h include file, 304–305</p><p class="s48" style="padding-left: 26pt;text-indent: 0pt;text-align: left;">listen() <span class="s131">function, 199, 206</span></p><p class="s131" style="padding-top: 1pt;padding-left: 26pt;text-indent: 0pt;text-align: left;">little-endian byte order, 29, 93, 316</p><p class="s131" style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">LiveCD, 4, 19</p><p class="s131" style="padding-top: 1pt;padding-left: 102pt;text-indent: 0pt;line-height: 109%;text-align: left;">John the Ripper, 422 Nemesis, 242</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">/usr/src/mitm-ssh, 407</p><p class="s131" style="padding-left: 123pt;text-indent: -32pt;line-height: 109%;text-align: left;">Load Effective Address instruction (<span class="s48">lea</span>), 35, 296</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;line-height: 109%;text-align: left;">local base (LB) pointer, 70 local variables, 62</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;line-height: 109%;text-align: left;">displaying in stack frame, 66 memory addresses, 69 memory saved for, 130</p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;line-height: 109%;text-align: left;">localtime_r() <span class="s131">function, 97 log files</span></p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;line-height: 109%;text-align: left;">exploitation without, 352–354 and intrusion detection, 334–336</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">logic, as art form, 2</p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">long <span class="s131">keyword, 42</span></p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">loopback address, 217, 317–318</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">loopback_shell_restore.s file, 346–347</p><p class="s131" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;line-height: 109%;text-align: left;">loopback_shell.s file, 318 looping</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">for, 10–11</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">while/until, 9–10</p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">lseek() <span class="s131">function, 95</span></p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">LSFR (stream cipher), 398</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part213.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part215.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
