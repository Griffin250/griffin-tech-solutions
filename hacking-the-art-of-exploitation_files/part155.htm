<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>0x6b1 ret2libc</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part154.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part156.htm">Next &gt;</a></p><p class="s32" style="padding-left: 91pt;text-indent: 0pt;text-align: left;"><a name="bookmark142">0x6b1 ret2libc</a></p><p style="padding-top: 6pt;padding-left: 91pt;text-indent: 0pt;text-align: justify;">Of course, there exists a technique used to bypass this protective counter- measure. This technique is known as <span class="s27">returning into libc</span>. libc is a standard C library that contains various basic functions, such as <span class="s31">printf() </span>and <span class="s31">exit()</span>. These</p><p style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: justify;">functions are shared, so any program that uses the <span class="s31">printf() </span>function directs execution into the appropriate location in libc. An exploit can do the exact same thing and direct a programâ€™s execution into a certain function in libc. The functionality of such an exploit is limited by the functions in libc, which is a significant restriction when compared to arbitrary shellcode. However, nothing is ever executed on the stack.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part154.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part156.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
