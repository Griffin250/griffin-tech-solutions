<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>A</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part202.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part204.htm">Next &gt;</a></p><p class="s5" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">A</p><p class="s48" style="padding-top: 4pt;padding-left: 91pt;text-indent: 0pt;line-height: 109%;text-align: left;">accept() <span class="s131">function, 199, 206 access mode for file, 84</span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">Accumulator (EAX) register, 24, 346</p><p class="s131" style="padding-left: 28pt;text-indent: 0pt;text-align: left;">zeroing, 368</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">ACK flag, 223</p><p class="s131" style="padding-left: 28pt;text-indent: 0pt;text-align: left;">filter for, 260</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">active sniffing, 239–251</p><p class="s48" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">add <span class="s131">instruction, 293</span></p><p class="s131" style="padding-left: 50pt;text-indent: -32pt;line-height: 109%;text-align: left;">Address Resolution Protocol (ARP), 219, 240</p><p class="s131" style="padding-left: 28pt;text-indent: 0pt;text-align: left;">cache poisoning, 240</p><p class="s131" style="padding-left: 28pt;text-indent: 0pt;text-align: left;">redirection, 240</p><p class="s131" style="padding-left: 28pt;text-indent: 0pt;text-align: left;">reply messages, 219</p><p class="s131" style="padding-left: 28pt;text-indent: 0pt;text-align: left;">spoofing, 243</p><p class="s131" style="padding-top: 1pt;padding-left: 28pt;text-indent: 0pt;text-align: left;">request messages, 219</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">address-of operator, 45, 47, 98</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">addressof.c program, 46</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">addressof2.c program, 47</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;line-height: 109%;text-align: left;">addr_struct.c file, 348–349 administrator account, 88. <span class="s132">See also</span></p><p class="s131" style="padding-left: 18pt;text-indent: 32pt;line-height: 107%;text-align: left;">root, user AES (Rijndael), 398</p><p class="s131" style="padding-left: 50pt;text-indent: -32pt;line-height: 109%;text-align: left;">AF_INET, socket address structure for, 201–202</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">aircrack, 448–449</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">AirSnort, 439</p><p class="s131" style="padding-top: 1pt;padding-left: 18pt;text-indent: 0pt;line-height: 109%;text-align: left;">algorithm, efficiency of, 398 algorithmic run time, 397–398 ampersand (<span class="s48">&amp;</span>)</p><p class="s131" style="padding-left: 28pt;text-indent: 0pt;line-height: 109%;text-align: left;">for address-of operator, 45 for background process, 347</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;line-height: 108%;text-align: left;">amplification attacks, 257 AND bitwise operation, 366 <span class="s48">and </span>instruction, 293</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">AND operator, 14–15</p><p class="s48" style="padding-left: 50pt;text-indent: -32pt;line-height: 109%;text-align: left;">&lt; &gt; <span class="s131">(angle brackets), for include file, 91</span></p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;line-height: 109%;text-align: left;">application layer (OSI), 196 argument vector, 59</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">arithmetic operators, 12–14</p><p class="s131" style="padding-top: 3pt;padding-left: 123pt;text-indent: -32pt;text-align: left;">ARP. <span class="s132">See </span>Address Resolution Protocol (ARP)</p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">arp_cmdline() <span class="s131">function, 246</span></p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">ARPhdr <span class="s131">structure, 245–246</span></p><p class="s48" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">arp_initdata() <span class="s131">function, 246</span></p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">arp_send() <span class="s131">function, 249</span></p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">arpspoof.c program, 249–250, 408</p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">arp_validatedata() <span class="s131">function, 246</span></p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;line-height: 109%;text-align: left;">arp_verbose() <span class="s131">function, 246 arrays in C, 38</span></p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">artistic expression, programming as, 2 ASCII, 33–34</p><p class="s131" style="padding-left: 123pt;text-indent: -21pt;line-height: 109%;text-align: left;">function for converting to integer, 59</p><p class="s131" style="padding-left: 91pt;text-indent: 10pt;line-height: 109%;text-align: left;">for IP address, conversion, 203 ASLR, 379–380, 385, 388</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">aslr_demo.c program, 380</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;line-height: 109%;text-align: left;">aslr_execl.c program, 389 aslr_execl_exploit.c program,</p><p class="s131" style="padding-left: 123pt;text-indent: 0pt;text-align: left;">390–391</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">assembler, 7</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">assembly language, 7, 22, 25–37</p><p class="s131" style="padding-top: 1pt;padding-left: 123pt;text-indent: -21pt;line-height: 107%;text-align: left;">GDB examine command to display instructions, 30</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;line-height: 109%;text-align: left;">if-then-else structure in, 32 Linux system calls in, 284–286 for shellcode, 282–286</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">syntax, 22</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;line-height: 109%;text-align: left;">assignment operator (<span class="s48">=</span>), 12 asterisk (<span class="s48">*</span>), for pointers, 43 asymmetric encryption, 400–405</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;line-height: 109%;text-align: left;">asymptotic notation, 398 AT&amp;T syntax for assembly</p><p class="s131" style="padding-left: 123pt;text-indent: 0pt;text-align: left;">language, 22</p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">atoi() <span class="s131">function, 59</span></p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">auth_overflow.c program, 122–125</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">auth_overflow2.c program, 126–133</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part202.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part204.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
