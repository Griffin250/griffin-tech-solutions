<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>0x431 Data-Link Layer</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part83.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part85.htm">Next &gt;</a></p><p class="s32" style="padding-left: 91pt;text-indent: 0pt;text-align: left;"><a name="bookmark73">0x431 Data-Link Layer</a></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;">The lowest visible layer is the data-link layer. Returning to the receptionist and bureaucracy analogy, if the physical layer below is thought of as inter- office mail carts and the network layer above as a worldwide postal system, the data-link layer is the system of interoffice mail. This layer provides a way to address and send messages to anyone else in the office, as well as to figure out who’s in the office.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">Ethernet exists on this layer, providing a standard addressing system for all Ethernet devices. These addresses are known as Media Access Con- trol (MAC) addresses. Every Ethernet device is assigned a globally unique address consisting of six bytes, usually written in hexadecimal in the form <span class="s31">xx:xx:xx:xx:xx:xx</span>. These addresses are also sometimes referred to as hardware addresses, since each address is unique to a piece of hardware and is stored in the device’s integrated circuit memory. MAC addresses can be thought of as Social Security numbers for hardware, since each piece of hardware is supposed to have a unique MAC address.</p><p style="padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: left;">An Ethernet header is 14 bytes in size and contains the source and destin- ation MAC addresses for this Ethernet packet. Ethernet addressing also pro- vides a special broadcast address, consisting of all binary 1’s (<span class="s31">ff:ff:ff:ff:ff:ff</span>). Any Ethernet packet sent to this address will be sent to all the connected devices.</p><p style="padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;">The MAC address of a network device isn’t meant to change, but its</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;">IP address may change regularly. The concept of IP addresses doesn’t exist at this level, only hardware addresses do, so a method is needed to correlate</p><p style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;">the two addressing schemes. In the office, post office mail sent to an employee at the office’s address goes to the appropriate desk. In Ethernet, the method is known as Address Resolution Protocol (ARP).</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 107%;text-align: left;">This protocol allows “seating charts” to be made to associate an IP address with a piece of hardware. There are four different types of ARP messages, but the two most important types are <span class="s27">ARP request messages </span>and <span class="s27">ARP reply messages</span>. Any packet’s Ethernet header includes a type value that describes the packet. This type is used to specify whether the packet is an ARP-type message or an IP packet.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">An ARP request is a message, sent to the broadcast address, that contains the sender’s IP address and MAC address and basically says, “Hey, who has this IP? If it’s you, please respond and tell me your MAC address.” An ARP reply is the corresponding response that is sent to the requester’s MAC address (and IP address) saying, “This is my MAC address, and I have this IP address.” Most implementations will temporarily cache the MAC/IP address pairs received in ARP replies, so that ARP requests and replies aren’t needed for every single packet. These caches are like the interoffice seating chart.</p><p style="text-indent: 0pt;text-align: left;"><span><img width="353" height="61" alt="image" src="Image_663.png"/></span></p><p class="s49" style="padding-top: 2pt;padding-left: 2pt;text-indent: 0pt;text-align: center;">ARP reply</p><p class="s82" style="text-indent: 0pt;text-align: right;">Source MAC: <span class="s83">00:00:00:bb:bb:bb</span></p><p class="s82" style="text-indent: 0pt;text-align: right;">Dest MAC: <span class="s83">00:00:00:aa:aa:aa</span></p><p class="s82" style="padding-top: 1pt;padding-left: 3pt;text-indent: 0pt;text-align: center;">“10.10.10.50 is at <span class="s83">00:00:00:bb:bb:bb</span>.”</p><p style="text-indent: 0pt;text-align: left;"/><p class="s49" style="padding-top: 4pt;padding-left: 26pt;text-indent: 0pt;text-align: left;">Second system</p><p class="s82" style="padding-top: 2pt;padding-left: 8pt;text-indent: 11pt;text-align: left;">IP: 10.10.10.50 MAC: <span class="s83">00:00:00:bb:bb:bb</span></p><p style="text-indent: 0pt;text-align: left;"/><p class="s49" style="padding-top: 4pt;padding-left: 29pt;text-indent: 0pt;text-align: left;">First system</p><p class="s82" style="padding-top: 2pt;padding-left: 7pt;text-indent: 11pt;text-align: left;">IP: 10.10.10.20 MAC: <span class="s83">00:00:00:aa:aa:aa</span></p><p style="text-indent: 0pt;text-align: left;"/><p style="text-indent: 0pt;text-align: left;"><span><img width="352" height="65" alt="image" src="Image_664.png"/></span></p><p class="s49" style="padding-top: 1pt;padding-left: 3pt;text-indent: 0pt;text-align: center;">ARP request</p><p class="s82" style="padding-top: 1pt;text-indent: 0pt;text-align: right;">Source MAC: <span class="s83">00:00:00:aa:aa:aa</span></p><p class="s82" style="text-indent: 0pt;text-align: right;">Dest MAC: <span class="s83">ff:ff:ff:ff:ff:ff</span></p><p class="s82" style="padding-top: 1pt;padding-left: 24pt;text-indent: 0pt;text-align: left;">“Who has 10.10.10.50?”</p><p style="text-indent: 0pt;text-align: left;"/><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">For example, if one system has the IP address 10.10.10.20 and MAC address <span class="s31">00:00:00:aa:aa:aa</span>, and another system on the same network has the IP address 10.10.10.50 and MAC address <span class="s31">00:00:00:bb:bb:bb</span>, neither system can communicate with the other until they know each other’s MAC addresses.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">If the first system wants to establish a TCP connection over IP to the second device’s IP address of 10.10.10.50, the first system will first check its ARP cache to see if an entry exists for 10.10.10.50. Since this is the first time these two systems are trying to communicate, there will be no such entry, and an ARP request will be sent out to the broadcast address, saying, “If you are 10.10.10.50, please respond to me at <span class="s31">00:00:00:aa:aa:aa</span>.” Since this request uses the broadcast address, every system on the network sees the request, but only the system with the corresponding IP address is meant to respond. In this case, the second system responds with an ARP reply that is sent directly back to <span class="s31">00:00:00:aa:aa:aa </span>saying, “I am 10.10.10.50 and I’m at <span class="s31">00:00:00:bb:bb:bb</span>.” The first system receives this reply, caches the IP and MAC address pair in its ARP cache, and uses the hardware address to communicate.</p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part83.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part85.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
