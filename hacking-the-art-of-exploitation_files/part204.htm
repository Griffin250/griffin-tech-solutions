<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>B</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part203.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part205.htm">Next &gt;</a></p><p class="s5" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">B</p><p class="s131" style="padding-top: 4pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">backslash (<span class="s48">\</span>), for escaped</p><p class="s131" style="padding-left: 91pt;text-indent: 32pt;line-height: 109%;text-align: left;">character, 180 backtrace</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;line-height: 109%;text-align: left;">of nested function calls, 66 of stack, 40, 61, 274</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">bandwidth, ping flood to</p><p class="s131" style="padding-left: 123pt;text-indent: 0pt;text-align: left;">consume, 257</p><p class="s131" style="padding-top: 1pt;padding-left: 102pt;text-indent: -10pt;line-height: 109%;text-align: left;">Base (EBX) register, 24, 344–345 saving current values, 342</p><p class="s131" style="padding-top: 3pt;padding-left: 16pt;text-indent: 0pt;text-align: left;">Base Pointer (EBP) register, 24, 31,</p><p class="s131" style="padding-left: 49pt;text-indent: 0pt;text-align: left;">70, 73, 344–345</p><p class="s131" style="padding-left: 16pt;text-indent: 10pt;line-height: 109%;text-align: left;">saving current values, 342 BASH shell, 133–150, 332</p><p class="s131" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">command substitution, 254</p><p class="s131" style="padding-top: 1pt;padding-left: 27pt;text-indent: 0pt;text-align: left;">investigations with, 380–384</p><p class="s131" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">for loops, 141–142</p><p class="s131" style="padding-left: 16pt;text-indent: 10pt;line-height: 109%;text-align: left;">script to send ARP replies, 243–244 BB84, 396</p><p class="s48" style="padding-left: 16pt;text-indent: 0pt;line-height: 108%;text-align: justify;">bc <span class="s131">calculator program, 30 beauty, in mathematics, 3 Bennett, Charles, 396</span></p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;line-height: 109%;text-align: left;">Berkeley Packet Filter (BPF), 259 big-endian byte order, 202</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">big-oh notation, 398</p><p class="s131" style="padding-top: 1pt;padding-left: 16pt;text-indent: 0pt;text-align: left;">bind call, <span class="s48">host_addr </span>structure for, 205</p><p class="s48" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">bind() <span class="s131">function, 199</span></p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">bind_port.c program, 303–304</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">bind_port.s program, 306–307</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">bind_shell.s program, 312–314</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">bind_shell1.s program, 308</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">/bin/sh, 359</p><p class="s131" style="padding-left: 16pt;text-indent: 10pt;line-height: 107%;text-align: left;">system call to execute, 295 birthday paradox, 437</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">bitwise operations, 84</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">bitwise.c program, 84–85</p><p class="s131" style="padding-top: 1pt;padding-left: 16pt;text-indent: 0pt;text-align: left;">block cipher, 398</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">Blowfish, 398</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">Bluesmack, 256</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;line-height: 107%;text-align: left;">Bluetooth protocol, 256 bootable LiveCD. <span class="s132">See </span>LiveCD botnet, 258</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">bots, 258</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;line-height: 109%;text-align: left;">BPF (Berkeley Packet Filter), 259 Brassard, Gilles, 396</p><p class="s131" style="padding-left: 16pt;text-indent: 0pt;line-height: 109%;text-align: left;">breakpoint, 24, 27, 39, 342, 343 broadcast address, for amplification</p><p class="s131" style="padding-left: 86pt;text-indent: 0pt;text-align: center;">attacks, 257</p><p class="s131" style="padding-left: 58pt;text-indent: 0pt;text-align: center;">brute-force attacks, 436–437</p><p class="s131" style="padding-left: 86pt;text-indent: 0pt;text-align: center;">exhaustive, 422–423</p><p class="s131" style="padding-left: 86pt;text-indent: 0pt;text-align: center;">bss segment, 69, 77</p><p class="s131" style="padding-left: 67pt;text-indent: 0pt;text-align: center;">for C variable storage, 75</p><p class="s48" style="padding-left: 16pt;text-indent: 0pt;text-align: left;">bt <span class="s131">command, 40</span></p><p class="s131" style="padding-left: 27pt;text-indent: -10pt;line-height: 109%;text-align: left;">buffer overflows, 119–133, 251 command substitution and Perl to</p><p class="s131" style="padding-left: 49pt;text-indent: 0pt;text-align: left;">generate, 134–135</p><p class="s131" style="padding-left: 27pt;text-indent: 0pt;line-height: 109%;text-align: left;">in memory segments, 150–167 notesearch.c program vulner-</p><p class="s131" style="padding-left: 49pt;text-indent: 0pt;line-height: 10pt;text-align: left;">ability to, 137–142</p><p class="s131" style="padding-left: 27pt;text-indent: 0pt;text-align: left;">stack-based vulnerabilities, 122–133</p><p class="s131" style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">buffer overrun, 119</p><p class="s131" style="padding-top: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">buffers, 38</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">program restrictions on, 363–376</p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">buildarp() <span class="s131">function, 246</span></p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">byte, 21</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;line-height: 109%;text-align: left;">byte counter, incrementing, 177 byte order of architecture, 30</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">conversion, 238</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part203.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part205.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
