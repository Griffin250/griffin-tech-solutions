<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>C</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part204.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part206.htm">Next &gt;</a></p><p class="s5" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">C</p><p class="s131" style="padding-top: 4pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">C compilers, 19</p><p class="s131" style="padding-top: 1pt;padding-left: 102pt;text-indent: 0pt;text-align: left;">free, 20</p><p class="s131" style="padding-left: 91pt;text-indent: 10pt;line-height: 109%;text-align: left;">variable data types and, 58 C programming language</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">address-of operator, 45</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;line-height: 109%;text-align: left;">arithmetic operators shorthand, 13 vs. assembly language, 282</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">Boolean operations, 15</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">comments, 19</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;line-height: 109%;text-align: left;">control structures, 309–314 file access in, 81–86 functions in, 16</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;line-height: 109%;text-align: left;">memory segments, 75–77 programmer responsibility for data</p><p class="s131" style="padding-left: 123pt;text-indent: 0pt;text-align: left;">integrity, 119</p><p class="s48" style="padding-left: 102pt;text-indent: -10pt;line-height: 109%;text-align: left;">call <span class="s131">instruction, 287 null bytes from, 290</span></p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;line-height: 10pt;text-align: left;">callback function, 235</p><p class="s131" style="padding-left: 123pt;text-indent: -32pt;line-height: 109%;text-align: left;">carriage return, for line termination in HTTP, 209</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;line-height: 109%;text-align: left;"><span class="s48">caught_packet() </span>function, 236, 237 CD with book. <span class="s132">See </span>LiveCD</p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;line-height: 10pt;text-align: left;">cdq <span class="s131">instruction, 302</span></p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;line-height: 109%;text-align: left;">char <span class="s131">data type, 12, 43 character array (C), 38</span></p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;line-height: 109%;text-align: left;">char_array <span class="s131">executable binary, 38 char_array.c program, 38 </span>check_authentication() <span class="s131">function,</span></p><p class="s131" style="padding-left: 123pt;text-indent: 0pt;text-align: left;">122, 125</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">stack frame for, 128–129</p><p class="s131" style="padding-left: 123pt;text-indent: -32pt;line-height: 109%;text-align: left;">child process, spawning root shell with, 346</p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">chmod <span class="s131">command, 88</span></p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">chown <span class="s131">command, 90</span></p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">chsh <span class="s131">command, 89</span></p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">cleanup() <span class="s131">function, 184</span></p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">client_addr_ptr<span class="s131">, 348, 349</span></p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">and crash, 353</p><p class="s48" style="padding-top: 3pt;padding-left: 18pt;text-indent: 0pt;line-height: 109%;text-align: left;">close() <span class="s131">function, file descriptor for, 82 closed ports, response with SYN/ACK</span></p><p class="s131" style="padding-left: 50pt;text-indent: 0pt;text-align: left;">packets, 268</p><p class="s48" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">cmp <span class="s131">operation, 26, 32, 310, 311</span></p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">code segment, 69</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;line-height: 109%;text-align: left;">CodeRed worm, 117, 319 command line, Perl to execute</p><p class="s131" style="padding-left: 50pt;text-indent: 0pt;text-align: left;">instructions, 133</p><p class="s131" style="padding-left: 50pt;text-indent: -32pt;line-height: 109%;text-align: left;">command prompt, indicator of back- ground jobs, 332</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">command-line arguments, 58–61</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;line-height: 109%;text-align: left;">commandline.c program, 58–59 commands</p><p class="s131" style="padding-left: 29pt;text-indent: 0pt;line-height: 109%;text-align: left;">running single as root user, 88 substitution and Perl to generate</p><p class="s131" style="padding-left: 18pt;text-indent: 32pt;line-height: 109%;text-align: left;">buffer overflows, 134–135 comments, in C program, 19 comparison operators, 14–15</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">compiled code, 20</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">compiler, 7</p><p class="s131" style="padding-left: 50pt;text-indent: -32pt;line-height: 109%;text-align: left;">computational power, vs. storage space, 424</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">computational security, 396</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;line-height: 109%;text-align: left;">conditional probability, 114 conditional statements,</p><p class="s131" style="padding-left: 50pt;text-indent: 0pt;text-align: left;">variables in, 14</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">confusion, 399</p><p class="s48" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">connect() <span class="s131">function, 199, 213, 314</span></p><p class="s131" style="padding-top: 1pt;padding-left: 18pt;text-indent: 0pt;line-height: 109%;text-align: left;">connect-back shellcode, 314–318 connectback-shell.s program,</p><p class="s131" style="padding-left: 50pt;text-indent: 0pt;text-align: left;">314–315</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;line-height: 109%;text-align: left;">connectivity, ICMP to test for, 221 constants, 12</p><p class="s131" style="padding-left: 50pt;text-indent: -32pt;line-height: 109%;text-align: left;">constructors (.ctors), table sections for, 184–188</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;line-height: 10pt;text-align: left;">convert.c program, 59–60</p><p class="s131" style="padding-top: 1pt;padding-left: 18pt;text-indent: 0pt;text-align: left;">Copyright Act, 118</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">core dump, 289</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;line-height: 109%;text-align: left;">Counter (ECX) register, 24 countermeasures</p><p class="s131" style="padding-left: 29pt;text-indent: 0pt;line-height: 109%;text-align: left;">for attack detections, 320 buffer restrictions, 363–376</p><p class="s131" style="padding-left: 29pt;text-indent: 0pt;text-align: left;">hardening, 376</p><p class="s131" style="padding-top: 1pt;padding-left: 29pt;text-indent: 0pt;line-height: 109%;text-align: left;">log files and, 334–336 nonexecutable stack, 376–379</p><p class="s131" style="padding-left: 29pt;text-indent: 0pt;text-align: left;">overlooking obvious, 336–347</p><p class="s131" style="padding-left: 29pt;text-indent: 0pt;text-align: left;">system daemons, 321–328</p><p class="s131" style="padding-left: 29pt;text-indent: 0pt;text-align: left;">tools, 328–333</p><p class="s131" style="padding-left: 18pt;text-indent: 0pt;text-align: left;">crackers, 3</p><p class="s131" style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">crash, 61, 128</p><p class="s131" style="padding-top: 1pt;padding-left: 102pt;text-indent: 0pt;line-height: 108%;text-align: left;">from buffer overflow, 120 and <span class="s48">client_addr_ptr</span>, 353 by DoS attacks, 251</p><p class="s131" style="padding-left: 123pt;text-indent: -21pt;line-height: 109%;text-align: left;">from out-of-bound memory addresses, 60</p><p class="s131" style="padding-left: 123pt;text-indent: -32pt;line-height: 109%;text-align: left;">CRC32 (cyclic redundancy checksum) function, 434</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;line-height: 10pt;text-align: left;">criminal activity, 451–452</p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">crypt() <span class="s131">function, 153, 418</span></p><p class="s131" style="padding-left: 25pt;text-indent: 0pt;text-align: right;">salt values, 423</p><p class="s131" style="padding-left: 25pt;text-indent: 0pt;text-align: right;">cryptanalysis, 393</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">crypt_crack.c program, 420</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">cryptography, 393</p><p class="s131" style="padding-left: 102pt;text-indent: 0pt;text-align: left;">laws restricting, 3</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">cryptology, 393</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">crypt_test.c program, 418</p><p class="s131" style="padding-left: 123pt;text-indent: -32pt;line-height: 107%;text-align: left;">.ctors (constructors), table sections for, 184–188</p><p class="s131" style="padding-left: 123pt;text-indent: -32pt;line-height: 107%;text-align: left;">curly braces (<span class="s48">{ }</span>), for set of instructions, 8, 9</p><p class="s48" style="padding-left: 91pt;text-indent: 0pt;line-height: 108%;text-align: left;">current_time <span class="s131">variable, 97 custom signal handlers, 322 </span>cut <span class="s131">command, 143–144 cyclic redundancy checksum</span></p><p class="s131" style="padding-left: 123pt;text-indent: 0pt;line-height: 11pt;text-align: left;">(CRC32) function, 434</p><p class="s131" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">Cynosure, 118</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part204.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part206.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
