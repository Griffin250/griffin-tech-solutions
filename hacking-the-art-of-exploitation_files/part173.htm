<!DOCTYPE  html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>0x730 Symmetric Encryption</title><link href="navigation.css" rel="stylesheet" type="text/css"/><link href="document.css" rel="stylesheet" type="text/css"/></head><body><p class="top_nav"><a href="part172.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part174.htm">Next &gt;</a></p><p class="s30" style="padding-left: 37pt;text-indent: 0pt;text-align: left;"><a name="bookmark158">0x730 Symmetric Encryption</a></p><p class="s27" style="padding-top: 8pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">Symmetric <span class="p">ciphers are cryptosystems that use the same key to encrypt and decrypt messages. The encryption and decryption process is generally faster than with asymmetric encryption, but key distribution can be difficult.</span></p><p style="padding-left: 109pt;text-indent: 0pt;text-align: left;">These ciphers are generally either block ciphers or stream ciphers.</p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 106%;text-align: left;">A <span class="s27">block cipher </span>operates on blocks of a fixed size, usually 64 or 128 bits. The same block of plaintext will always encrypt to the same ciphertext block, using the same key. DES, Blowfish, and AES (Rijndael) are all block ciphers. <span class="s27">Stream ciphers </span>generate a stream of pseudo-random bits, usually either one bit or byte at a time. This is called the <span class="s27">keystream, </span><a href="part187.htm#bookmark181" class="a">and it is XORed with the plaintext. This is useful for encrypting continuous streams of data. RC4 and LSFR are examples of popular stream ciphers. RC4 will be discussed in depth in “Wireless 802.11b Encryption” on page </a>433.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">DES and AES are both popular block ciphers. A lot of thought goes into the construction of block ciphers to make them resistant to known crypt- analytical attacks. Two concepts used repeatedly in block ciphers are confusion</p><p style="padding-top: 3pt;padding-left: 91pt;text-indent: 0pt;text-align: left;">and diffusion. <span class="s27">Confusion </span>refers to methods used to hide relationships between the plaintext, the ciphertext, and the key. This means that the output bits must involve some complex transformation of the key and plaintext. <span class="s27">Diffusion </span>serves to spread the influence of the plaintext bits and the key bits over as much of the ciphertext as possible. <span class="s27">Product ciphers </span>combine both of these concepts by using various simple operations repeatedly. Both DES and AES are product ciphers.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 106%;text-align: left;">DES also uses a Feistel network. It is used in many block ciphers to ensure that the algorithm is invertible. Basically, each block is divided into two halves, left (<span class="s27">L</span>) and right (<span class="s27">R </span>). Then, in one round of operation, the new left half (<span class="s27">L</span><span class="s100">i</span>) is set to be equal to the old right half (<span class="s27">R</span><span class="s100">i </span><span class="s101"></span><span class="s102">1</span><span class="s103">), and the new right</span></p><p style="padding-left: 91pt;text-indent: 0pt;line-height: 77%;text-align: left;">half (<span class="s27">R</span><span class="s100">i </span>) is made up of the old left half (<span class="s27">L</span><span class="s100">i </span><span class="s101"></span><span class="s102">1</span><span class="s103">) XORed with the output of a</span></p><p class="s27" style="padding-left: 91pt;text-indent: 0pt;text-align: justify;"><span class="p">function using the old right half (</span>R<span class="s100">i </span><span class="s101"></span><span class="s102">1</span><span class="s103">) and the subkey for that round (</span>K<span class="s100">i</span><span class="p">). Usually, each round of operation has a separate subkey, which is calculated earlier.</span></p><p style="padding-left: 91pt;text-indent: 18pt;line-height: 89%;text-align: justify;">The values for <span class="s27">L</span><span class="s100">i </span>and <span class="s27">R</span><span class="s100">i </span>are as follows (the <span class="s47"></span><span class="s95"> </span>symbol denotes the XOR operation):</p><p class="s104" style="padding-top: 7pt;padding-left: 109pt;text-indent: 0pt;text-align: left;">L<span class="s105">i </span><span class="s106">= </span>R<span class="s105">i </span><span class="s107"></span><span class="s108">1</span></p><p class="s27" style="padding-top: 4pt;padding-left: 109pt;text-indent: 0pt;text-align: left;">R<span class="s100">i </span><span class="p">= </span>L<span class="s100">i </span><span class="s101"></span><span class="s102">1 </span><span class="s47"></span><span class="s95"> </span>f<span class="p">(</span>R<span class="s100">i </span><span class="s101"></span><span class="s102">1</span><span class="s103">, </span>K<span class="s100">i</span><span class="p">)</span></p><p style="padding-top: 4pt;padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: justify;">DES uses 16 rounds of operation. This number was specifically chosen to defend against differential cryptanalysis. DES’s only real known weakness is its key size. Since the key is only 56 bits, the entire keyspace can be checked in an exhaustive brute-force attack in a few weeks on specialized hardware.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">Triple-DES fixes this problem by using two DES keys concatenated together for a total key size of 112 bits. Encryption is done by encrypting the plaintext block with the first key, then decrypting with the second key, and then encrypting again with the first key. Decryption is done analogously, but with the encryption and decryption operations switched. The added key size makes a brute-force effort exponentially more difficult.</p><p style="padding-left: 91pt;text-indent: 17pt;line-height: 108%;text-align: left;">Most industry-standard block ciphers are resistant to all known forms of cryptanalysis, and the key sizes are usually too big to attempt an exhaustive brute-force attack. However, quantum computation provides some interesting possibilities, which are generally overhyped.</p><p style="text-indent: 0pt;text-align: left;"><br/></p><p class="nav">&nbsp;&nbsp;</p><p class="nav">&nbsp;</p><p class="nav"><a href="part172.htm">&lt; Previous</a><span> | </span><a href="../hacking-the-art-of-exploitation.html">Contents</a><span> | </span><a href="part174.htm">Next &gt;</a></p><p class="nav">&nbsp;&nbsp;</p></body></html>
